==================[Syllabus Start]==================
COMS 4771 Fall 2023 Syllabus
1
.  
Description
COMS 4771 is a graduate-level introduction to machine learning. The course covers basic statistical principles of supervised machine learning, as
well as some common algorithmic paradigms.
2
.  
Course information
Lecture times
: Tue/Thu 1:10pm–2:25pm (Section 1), 2:40pm–3:55pm (Section 2)
Lecture venue
: 451 CSB
Instructor
: Daniel Hsu
See course website 
https://www.cs.columbia.edu/~djhsu/coms4771-f23/
 for up-to-date information and announcements.
3
.  
Learning goals
Apply mathematical and statistical principles to understand and reason about machine learning problems and algorithms.
Apply algorithmic techniques to construct machine learning algorithms.
Apply machine learning algorithms in some simple application domains (e.g., text classification).
4
.  
Prerequisites
There are several prerequisites for this course.
You must be fluent in multivariate calculus, linear algebra, and basic probability, all at the undergraduate level.
You must be comfortable with writing code to process and analyze data in Python.
You must be familiar with basic algorithmic design and analysis.
You must have general 
mathematical maturity
.
A more detailed list of topics is available here
.
Review notes for some of the prerequisites are available here
.
Some online resources for course prerequisites are as follows.
Multivariable calculus: 
MIT Open Courseware
Linear algebra: 
Hefferon’s 
Linear Algebra
, 
COMS 3251 lecture notes
Probability: 
Grinstead and Snell’s 
Introduction to Probability
 
(local copy with hyperref)
Programming in Python with NumPy: 
Python Tutorial
, 
NumPy: the absolute basics for beginners
5
.  
Topics
The tentative list of topics is as follows.
Nearest neighbors
Classification using generative models
Statistical models for prediction
Decision tree learning
Linear regression
Linear classification
Feature maps and kernel methods
Inductive bias and regularization
Dimension reduction
Optimization by gradient methods
Optimization problems and duality
Multi-class linear prediction
Calibration and bias
Generalization theory
Neural networks
A brief overview of the course topics is available here
.
6
.  
Requirements
Students are expected to attend lectures, complete required reading assignments, complete homework assignments, and take in-class exams.
7
.  
Readings
Lectures will be mostly self-contained; required reading assignments will be posted alongside the lecture schedule. Pointers to optional reading from
(some of) the following texts will also be given.
A Course in Machine Learning
 (CML) by Daumé
Pattern Classification
 (PC) by Duda, Hart, and Stork
Patterns, Predictions, and Actions
 (PPA) by Hardt and Recht
Mathematics for Machine Learning
 (MML) by Deisenroth, Faisal, and Ong
The Elements of Statistical Learning
 (ESL) by Hastie, Tibshirani, and Friedman
All of these texts are available online, possibly through 
Columbia University Libraries
.
8
.  
Assessment
The overall course grade is comprised of the following.
homework assignments (40%)
in-class exams (60%) on 
Thursday, October 26
 and 
Thursday, December 7
There are no make-up assignments/exams available.
Do not enroll in the course if you do not expect to be able to take the exams on the scheduled dates during lecture.
Extensions on homework assignments are only granted for medical or family emergencies. Late homework assignments are not accepted for
any other reason.
Requests for such extensions must be submitted in writing to the instructor 
by your advising dean or your academic advisor
 after
you have explained your situation and provided any necessary documentation to them.
If you miss an exam due to a medical or family emergency, you may be granted an “incomplete” for the course, which you can complete by
taking a comparable exam in a future offering of this course, or you may “withdraw” from the course.
Overall course grades will be curved.
9
.  
Columbia video network
CVN students may be subject to other policies related to the video network format; please contact CVN administration for details.
10
.  
Disability services
If you require accommodations or support services from 
Disability Services
, please make necessary arrangements in accordance with their policies
within the first two weeks of the semester.
11
.  
Academic rules of conduct
You are expected to adhere to the 
Academic Honesty policy of the Computer Science Department
, as well as the following course-specific
policies.
11
.
1
.  
Policies on plagiarism
Any work you submit must be written completely in your own words.
11
.
2
.  
Policies on collaboration
Homework assignments must be completed 
individually
 or in 
groups of two or three
. All students must abide by the following rules regarding
collaboration.
If you work in a group, all members of the group must contribute to the solution of each problem.
You may not look at or take another student’s/group’s homework write-up/solutions/code (whether partial or complete).
You may not show or give your homework write-up/solutions/code (whether partial or complete) to another student/group.
Discussions between different homework groups must not go as far as one group telling the other group how to solve a problem.
Exams must be completed individually. 
Collaboration or discussion between students on exams is NOT PERMITTED.
11
.
3
.  
Policies on the use of outside references and resources on homework assignments
Outside reference materials and resources (i.e., texts and sources beyond the assigned reading materials for the course) may be used on homework
under the following rules.
Any reference or resource used must be acknowledged and cited in the write-up.
Explicitly searching or querying the internet/large language models/“AIs”/etc. for answers or hints on homework assignments
is not permitted.
If you 
inadvertently
 come across a solution to (or substantial hint about) a problem, you must:
acknowledge this source and document the circumstance in your homework write-up;
produce a solution without looking at the source; and
as always, write your solution in your own words.
If you have already seen one of the homework problems before (e.g., in a different course), please re-solve the problem without referring to
any previous solutions.
In your write-up, please also indicate that you had seen the problem before. (You won’t lose any credit for this; it would just be
helpful for us to know about this fact.)
Outside references and sources CANNOT be used on exams.
You are welcome to use resources found in the library, on the internet, embedded in large language models, etc., to help you learn about the course
topics. But please note that these resources may contain (often very subtle) inaccuracies, and the course staff may not be able to help you discern
whether a particular resource is correct or not. Also, these resources may not be used on exams.
11
.
4
.  
Consequences of policy violations
Violation of any portion of these policies will result in a penalty to be assessed at the instructor’s discretion (e.g., a zero grade for the assignment in
question, a failing letter grade for the course), even for a first offense.
12
.  
Getting help
You are encouraged to use office hours and message board to discuss and ask questions about course material and reading assignments, and to
ask for high-level clarification on and possible approaches to homework problems. If you need to ask a detailed question specific to your solution,
please do so on the message board and mark the post as “private” so only the instructors can see it.
Questions, of course, are also welcome during lecture. If something is not clear to you during lecture, there is a chance it may also not be clear to
other students. So please raise your hand to ask for clarification during lecture. Some questions may need to be handled “off-line”; we’ll do our
best to handle these questions in office hours or on message board.

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
