==================[Syllabus Start]==================
CS 4700/5700:
Foundations of
Artificial Intelligence
Enrollment Questions
Most questions about enrollment are not
specific to this course and you'll find the
answers at:
Enrollment information for CS classes
Waitlist 
FAQs
.
Information 
specifically for 4000- and 5000-level courses
.
If, after reading the above resources, you still have a question about getting into the course, please file a
help ticket at 
https://tdx.cornell.edu/TDClient/193/Portal/Home/
. Thank you!
Course Staff:
Instructor
:
Prof. Kevin Ellis
, Gates 442B
Course Administrator
:
Lacy 
Jordaens, lsl92@cornell.edu
Graduate TAs
:
Vivian Nguyen
Top Piriyakjulkj
Jinyan Su
Office Hours
 can be found at 
https://calendar.google.com/calendar/u/0?
cid=ZWU2ZGNjOTRlZTZmNjk5NDA2MjFiZjE2NmY2Mjg3YTQyODlmMTI1MTJlMzRkODM5OGExNDJjYWE3NmE2ODc4ZUBncm91cC5jYWxlbmRhci5nb29nbGUuY29t
Course email
Please always put "CS4700" in the Subject field of any course 
email.
All course-specific administrative 
matters
: 
lsl92@cornell.edu (Lacy Jordaens)
 
- such as, for
example, exam logistics and special 
accommodations letters, including those arising from COVID.
All course content matters
: If you have any 
questions about course content - such as about
homework 
solutions or things like that - please contact the 
instructors via Ed Discussion
CS 4700/5700 online
Canvas
: 
The 
Canvas 
website for the course
 will be used as the entry point to all 
online material for
the course, and will include links to the 
other online resources for the course.
Ed Discussion
: Online course discussions will take 
place on Ed Discussion, and is accessible via the
course's Canvas 
page. 
You will be automatically enrolled in it. 
You are required 
to read it - it will be
the primary place where we send 
information to students.
Gradescope
: Assignments should be submitted via 
Gradescope
. 
Navigate to Gradescope via
Canvas. 
Please use your Net ID as your student ID number to ensure that your grades are
recorded correctly.
Prerequisites:
Officially this course lists CS2110/ENGRD2110 and CS2800 as prerequisites. 
What follows is the more
specific list of topics that the course will assume you know. 
If you don't know them yet, don't take the
course hoping you'll pick them up along the way. 
There is ample evidence that students who do so
struggle in the course. 
If you know the following, regardless of the courses taken, then that's all
we care about.
 
This is a senior/master's-level CS course, and we will expect that level of background
from students.
Trees and graphs and algorithms on them.
 
You should come into 
the course capable of, for
example, giving a pseudo-code algorithm for 
depth-first search or Dijkstra's shortest path
algoritm.
Basic probability.
 
For example, if asked to compute P(A|B) and you know 
P(B|A), P(A), and P(B), you
should recognize that this is when you 
pull out Bayes Rule (and, obviously, then correctly compute
P(A|B)).
Propositional and first-order logic.
 
Coverage of this topic 
in 2800 can be somewhat variable, so
this is the one 
prerequisite we spend some time reviewing and not just assuming.
Programming.
 This is a 4000-level CS course for undergraduates and a 5000-level CS course for
master's students. 
You should know how to program. 
The course will therefore also assume you
are comfortable programming and some homework assignments will involve programming. 
If
you don't feel comfortable programming do not take this course.
All programming assignments will require Python. 
If you do not know it yet, the course
assumes you will be able to pick it up. (Moreover, if you don't know it, it's something you
really should have picked up by the time you leave Cornell.) 
Much of the infrastructure for
your programming assignments will be given to you, so if you don't know Python a lot of
this will be more about looking up the syntax for things you already know.
Textbook:
Artificial Intelligence: A Modern Approach, 4th Edition
 by Stuart Russell and Peter Norvig
The textbook is also being made available via Instant Access within Canvas. 
You will be charged
until you opt out of the textbook.
Exercises
: Most textbooks have helpful exercises at 
the end of each chapter. 
This textbook,
however, has moved all 
exercises to 
github: 
Exercises 
for 
Artificial Intelligence: A Modern
Approach
Grading:
Grade components:
 Your final grade percentage will be computed from the following course elements
in the percentages listed:
Prelim: 35%:
The prelim for the course will take place on 
Thursday, March 14, 7:30pm
. 
It will
cover the material up through the lecture on Wednesday, March 13. 
All exam conflicts should be
reported using a conflict form that will be announced on Ed. 
Please include details on the other
exam or course causing the conflict.
Final: 40%:
While the final exam may include material from the entire semester, it will be primarily
focused on testing material not covered on the prelim.
Homework: 25%:
 There will be homeworks approximately every two weeks. 
Some will involve
programming. 
Each will be worth an equal proportion of your homework grade unless specified
otherwise.
Deadlines:
 Penalty of 3% per day (rounded up to the nearest day). Example: You get 90% on
the homework (raw score), but you submit it 1.4 days late, which rounds up to 2, giving a
total of penalty 3%/day * 2 days = 6%. Your adjusted score becomes: (1 - 3%/day * 2 days) *
90% = 94% * 90% = 84.6%. 
If you have extenuating circumstances
, please send email to
the course administrator, Lacy Jordaens, lsl92@cornell.edu. 
We will provide extensions when
applicable for injuries, family emergencies, etc., on a case-by-case basis. 
Getting confused
about the time an assignment is due, or being bogged down by work in other classes, is not
an extenuating circumstance. 
There are no dropped homeworks.
Submissions:
 Read homework assignments carefully. 
You have not submitted the
assignment on time if you have not submitted it on the proper platform (Gradescope or
otherwise) on time.
Format:
 
Nonprogramming homeworks must be typeset
, such as via Microsoft Word or
LaTeX. 
Regardless of the tool you use, use common sense: Is it legible? 
We are harsh. 
If we
can't read it you get a zero. 
If you submit something handwritten, you get a zero. 
Really.
Collaboration Policy
: Doing a homework problem typically involves three steps: (1)
understanding a question, (2) figuring out a solution and (3) writing it up coherently. For the
first step we encourage discussion with classmates. 
For the second, discussion with
classmates is also ok, but it is important that it conclude with you understanding how to
solve the question, not just copying someone else's solution. 
You are also allowed to refer to
online resources that you might find that might help you understand the question and
understand any required background knowledge, but not to figure out the solution. 
Always,
the third 
step, writing it up, must be your own work.
You are not allowed to share digital or written notes or images of 
your work in any
form with each other.
Your work must include acknowledgements of all students 
with whom you
collaborated at the top of your first page.
The solutions that you write up must be entirely your own work.
Additional grading information:
Regrade Requests:
 Regrade requests must be submitted within 
seven days
 of grades/solutions
being released. 
They should not be "Why is this wrong?" - that is something you can ask in office
hours or via a post on Ed Discussion. 
Regrade requests should be made because you believe a
specific error was made in the grading. Sometimes a student 
does
 discover either an error in the
expected solution or a valid solution that had not been considered. Determine this first in office
hours or via an online post, and submit a regrade request if it is verified there. 
We reserve the
right to lower points on other questions if you submit a regrade request. (And, to be truthful, that
last sentence is to give us options to respond to students who abuse the regrade request process
or who submit requests using anything but language respectful of their fellow students who are
responsible for grading.)
Extra credit:
 Participation on Ed Discussion, particularly answering 
questions and writing helpful
posts, is strongly encouraged, and those who participate energetically in this online venue for the
course will receive extra credit at the end of the semester. 
Asking questions that have already been
answered on Ed Discussion or on this very page will counteract extra credit.
Conversion to letter grades:
 We do not have predetermined letter-grade cutoffs, and will
determine those based on the final distribution of overall grade percentage. However, we commit
to using letter-grade cutoffs which are 
at least
 as generous as the following: 90%+ will be some
kind of A, 80%+ will be 
at least
 some kind of B, 70%+ will be 
at least
 some kind of C. Any
adjustment of letter-grade boundaries will only be to lift up grades relative to these cutoffs, and
never to shift grades below what they would be using these cutoffs. 
In other words, you are
guaranteed at least whatever letter grade you would have received given typical highschool grade
cutoffs, and you might hypothetically, for example, receive an A 
with an 80% final average if the
class average skews low enough.
Class Policies
Auditing
: There is no auditing option for this course. 
Do not sign up to audit this course.
Technology:
 Numerous research studies have found adverse learning (and grade) impacts from
the use of technology (laptops, cellphones, etc.) in classrooms, both directly for the students who
are using the technology but also for other students in the class. This is true even for those
students who think they are good multi-taskers or otherwise think they are able to learn better
with the use of technology in class - studies show that those who do the most multitasking on
their computer are the ones with the weakest ability to multitask. It also impacts the instructor
when students are sufficiently engaged in their technology than it impacts the subtle body
language that informs a teacher about how well their material is 
being received.
Our strong advice is to not use technology in the classroom. However, some students will want to
do things like use a tablet to take notes on the PDFs of slides. 
As a result the policy for this course
is as follows:
You can use technology only if you are seated in the back rows 
of either side section of the lecture
hall. 
If you use technology 
otherwise you will be asked to turn it off.
(For completeness, should the instructor ask you to do use technology - such as to answer an
online poll - you are of course allowed to use it. 
When completed the technology must be put
away.)
If you believe you have special circmstances that aren't covered by this policy please contact the
instructor.
Academic Integrity
: From 
Cornell's code of academic integrity
:
Absolute integrity is expected of every Cornell 
student in all academic undertakings. Integrity
entails a firm 
adherence to a set of values, and the values most essential to 
an academic
community are grounded on the concept of honesty 
with respect to the intellectual efforts of
oneself and 
others. Academic integrity is expected not only in formal 
coursework situations, but in
all University relationships and 
interactions connected to the educational process, including 
the
use of University resources. ... A Cornell student's 
submission of work for academic credit indicates
that the work 
is the student's own. All outside assistance should be 
acknowledged, and the
student's academic position truthfully 
reported at all times. In addition, Cornell students have a
right to expect academic integrity from each of their 
peers.
Any distribution or dissemination of course assignment information (such as copies of exams,
solutions, etc.) to students not taking the course - whether to students in a subsequent offering of
the course, via a website, or any other circmstance - is a violation of the academic intregity policy
for this course. 
We will pursue strong negative consequences for academic integrity
violations.
Accommodations
 There are various non-academic reasons 
students can face difficulties in
successfully completing a course 
of study. 
Some can be short-term, some chronic. 
If there are any
special accommodations that we must be aware of to help you be a 
successful student in this
course it will typically be documented in 
a letter from the appropriate Cornell office, most typically
Student 
Disability Services. 
Please email such letters to the course 
administrator, Lacy Jordaens, at
lsl92@cornell.edu. 
While it is our 
responsibility to be mindful of relevant Cornell policies
governing 
such matters, it is your responsibility to notify us of the 
relevance of these policies to
you. 
Please submit the necessary 
documentation during the first two weeks of the
semester
, so 
that we can ensure that the necessary arrangements can be made as 
quickly as
possible.
Respect:
 Everyone - the instructor, TAs, and students - must be respectful of everyone else in this
class. All communication, in class and online, will be held to a high standard for thoughtfulness
and inclusiveness: it may never target individuals or groups for harassment, and it may not
exclude specific groups. 
Sometimes such acts occur without hurtful intent, but nonetheless create
hurtful experiences for others. 
One very common example of this is humor when it targets
particular individuals or groups. 
The label on this section is "Respect" because the surest way to be
thoughtful about such matters is to always interact with others in respectful ways. Humor that
targets particular individuals or groups is not respectful. 
If any of the communications or
interactions in this class doesn't meet these standards - whether with a fellow student or with
course staff - please contact the instructor; if for whatever reason you don't feel comfortable
discussing something directly with the instructor you may also choose to raise it with your
advising office or the department chair.
Course Schedule
Starting Monday January 22, lectures will take place Mondays and Wednesdays 2:55pm - 4:10pm in
Hollister Hall B14. 
The schedule of lectures and homeworks is as follows. 
(We may tweak this schedule
as the semester progresses.) 
Slides for each lecture will be posted on Canvas just before the relevant
lecture under Files > Slides.
Date
Title
Readings
Homework
1/22
Overview
1/24
Uninformed Search
Russell & Norvig Ch. 3.1-4
HW 1 out, due 2/5
1/29
Informed Search
Russell & Norvig Ch. 3.5-6
1/31
Local search
Russell & Norvig Ch. 4.1-2
2/5
Game Trees: Minimax
Russell & Norvig Ch. 5.1-3
HW 1 due
HW 2 out, due 2/14
2/7
Game Trees: Expectimax,
Utilities
Russell & Norvig Ch. 5.5,
16.1-16.3
2/12
Markov Decision
Processes 1
Russell & Norvig Ch. 17.1-
3
2/14
Markov Decision
Processes 2
Russell & Norvig Ch. 17.1-
3
HW 2 due
HW 3 out, due 3/4
2/19
Reinforcement Learning
1
Russell & Norvig Ch. 21
2/21
Reinforcement Learning
2
Russell & Norvig Ch. 21
2/24-2/27
February Break
2/28
Bandits, Monte Carlo Tree
Search
3/4
Probability
Russell & Norvig Ch. 12.1-
6
HW 3 due
3/6
Bayes Nets
Russell & Norvig Ch. 13.1-
2
HW 4 out, due 4/10
Masters (5700) HW out,
due 3/25
3/11
Independence
Russell & Norvig Ch. 13.1-
2
3/13
Bayesian Inference and
Prediction
3/14
Prelim Exam
7:30pm, location TBD
3/18
Exact Inference
Russell & Norvig Ch. 13.3
3/20
Sampling Methods
Russell & Norvig Ch. 13.4
3/25
Hidden Markov Models 1
Russell & Norvig Ch. 14.1-
Masters (5700) HW due
3
3/27
Hidden Markov Models 2
Russell & Norvig Ch. 14.1-
3
3/30-4/8
Spring Break, Eclipse
4/10
Decision Networks / VPI
Russell & Norvig Ch. 16.5-
6
HW 4 due
4/15
Propositional Logic 1
Russell & Norvig Ch. 7.1-4
HW 5 out, due 4/29
4/17
Propositional Logic 2
Russell & Norvig Ch. 7.5 -
7.7
4/22
First-Order Logic
Russell & Norvig Ch. 9.1-5
4/24
Planning 1
Russell & Norvig Ch. 11.1-
3
HW 6 out, due 5/6
4/29
Planning 2
Russell & Norvig Ch. 26.5
HW 5 due
5/1
Special Topics in AI
5/6
Special Topics in AI
HW 6 due
TBD, 5/13-
5/20
Final Exam

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
