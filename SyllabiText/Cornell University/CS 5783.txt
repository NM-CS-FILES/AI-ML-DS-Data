==================[Syllabus Start]==================
Mathematical Foundations of Machine
Learning 
CS 4783/5783
News :
1
. 
Welcome to first day of class!
2
. 
Join ED for Discussions: 
here 
(https://edstem.org/us/join/TQ8dXH)
Location and Time : 
Location : Bill and Melinda Gates Gall, G01
Online: The class will also be available via zoom at same time at:
Join Zoom Meeting (only cornell ID will be allowed):
https://cornell.zoom.us/j/97223565682?pwd=TzhNS1BqYlV6d1hRbWo4S200YU8wQT09
(https://cornell.zoom.us/j/97223565682?pwd=TzhNS1BqYlV6d1hRbWo4S200YU8wQT09)
 
Meeting ID: 972 2356 5682
Passcode: 142211
Time : Mon-Wed: 
9:40 AM to 10:55 AM (EST) 
Office Hours : 
Karthik Sridharan: Tue 1:30-2:30PM, EST
Zoom Link: 
[Link]
 (https://cornell.zoom.us/j/93677382570?
pwd=TlpWbURXaGZGT0xSNll2UzhjMHc5UT09)
Gregory Yauney: Wed: 1-2PM, EST
Zoom Link: 
[Link]
 (https://cornell.zoom.us/j/96638608049?
pwd=NEtBdDNTUzhYc2U1emlMQTNsTFVWZz09)
Isay Katsman: Fri: 5-6PM, EST
Zoom Link: 
[Link]
 (https://cornell.zoom.us/j/97287465491?
pwd=RjRXSW9wQzNNZFlkMXNoNHdRck5pZz09)
DEI Statement : 
You belong here! Everyone is welcome to this class. You should expect and demand to be treated by
the course staff and your classmates with respect. If any incident occurs that challenges this
commitment, please let the instructors know so we can address the issue. This course subscribes to
the 
Computer Science Department’s Values of Inclusion
(https://www.cs.cornell.edu/information/diversity-inclusion/values-inclusion)
 
Description : 
Machine Learning (ML) is a ubiquitous technology. This course, which is a follow up to an
introductory course on ML will cover topics that aim to provide a theoretical foundation for designing
and analyzing ML algorithms. This course has three basic blocks. First block will provide basic
mathematical and statistical toolset required for formalizing ML problems effectively and analyzing
them. This block will include topics like generalization, sample complexity of learning algorithm and
understanding the inherent challenges in various ML frameworks and models. The second block will
provide the foundations in algorithms design and optimization techniques required for building and
analyzing various ML algorithms. This block will cover topics like gradient descent, stochastic
gradient descent, algorithm design for online learning and computational challenges in ML. ML
algorithms are deployed in real world and make decisions that affect real world users. The third
block, will cover topics on how to formally reason about and how to design ML methods that address
social and user related concerns that ML algorithms need to deal with. This block will cover topics
such as fairness, privacy, the right to be forgotten and other such issues and how to build ML
algorithms that address or assuage these concerns. 
Pre-requisite : 
Prerequisite: CS 4780, CS 4820 or equivalent. 
Outcomes : 
Students will be able to reason about Machine Learning(ML) problems and algorithms in a principled
fashion, to identify what makes learning hard and how to design algorithms that would provably
work well. Students will be able to analyze new machine learning algorithms they might encounter
or even design their own methods that can address specific requirements that they might encounter
in their applications. Through completion of the term project students will demonstrate what it
entails to formally analyze and reason out an end-to-end topic in the theory of ML and give them a
taste of a real research project. Students will be aware of the social implications ML method choices
can have in the real world and demonstrate to them tools that can help them identify and tackle
such real world social challenges that any ML based system needs to deal with. 
Grading :
4 assignments, one term project and course prelims. 3% For class participation. 
For CS 5783 students, there will be an additional two reading assignments where you read two
assigned research papers and quiz on them will follow.
Assignments :
There will be a total of 4 assignments covering 40% of your grade.
Prelim :
This course has one prelim worth 30% of your grade.
Term project :
There will be a term project due by the end of the course. The project is worth 27% of your
grade. 
Email: sridharan at cs dot cornell dot edu

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
