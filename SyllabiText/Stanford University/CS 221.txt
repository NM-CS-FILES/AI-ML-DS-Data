==================[Syllabus Start]==================
Moses Charikar
Instructor
Sanmi Koyejo
Instructor
Samar Khanna
Head CA
Micael 
Tchapmi
Student Liason
Amelie Byun
Course Manager
Akash Velu
General OH
Aman Singh
General OH
Andrew Lee 
Homework OH
Anirudhan Badrinath
Homework OH
Irena Gao
Homework OH
Julie Liu
Homework OH
Minae Kwon
General OH
Rishi Agarwal
Homework OH
Sanjari Srivastava
Homework OH
Trevor Maxfield
General OH
Yilin Wu
Homework OH
Zuyi Zhao
Homework OH
CS221: Artificial Intelligence: Principles and Techniques
Stanford / Spring 2022-2023
[Calendar] 
  
[Coursework]
 
  
[Schedule]
 
  
[Lecture Slides]
Lectures: Mon/Wed 10:30am-11:50am in 
NVIDIA Auditorium
.
Problem sessions: Fri 3:00pm-4:20pm in 
Skilling 
Auditorium
.
Office hours, homework parties: see the 
Calendar
.
To contact the teaching staff, please use 
Ed
; for more 
personal/sensitive matters, email 
cs221-spr2223-staff@lists.stanford.edu
.
Teaching Staff
Activities
Lectures:
 All lectures will be recorded and available on Canvas.
Problem sessions:
 CAs work through practice homework and exam problems.
Homework parties
: CAs help students work through homework problems in small groups.
Office Hours:
 Meet with instructors and CAs. 
There are two types of CA office hours: homework OH (for help with homework questions) and 
general
OH (to ask questions about course content from lecture).
Homework parties and most office hours are in person in 
Huang 
Basement
, 
but we will have some remote office hours (for SCPD students) on Zoom. 
See
class 
calendar
 
for the exact times and locations of all activities.
Policies
Communication:
 
We will use 
Ed
 for all communications, 
which you can access via 
Canvas
. 
SCPD students: please email 
scpd-
gradstudents@stanford.edu
 if you need general 
assistance. 
Make a public Ed post whenever possible. 
For private matters, make a private Ed post,
which will be visible to only the instructors and all CAs. 
For extra sensitive matters, you can also email 
cs221-spr2223-staff@lists.stanford.edu
, 
which is
visible by only the instructors, head CA, and student liaison.
Video access disclaimer:
 
Lectures and sections will be recorded and available on Canvas. 
These recordings might be reused in other Stanford
courses, viewed by 
other Stanford students, faculty, or staff, or used for other 
education and research purposes. If you have questions or concerns,
please contact us.
Academic accommodations:
 
If you need an academic accommodation, contact the Office of Accessible Education (OAE). 
The OAE will then prepare an
OAE letter with the recommended accommodations. 
Send this letter to 
cs221-spr2223-staff@lists.stanford.edu
 
by 
Friday, April 21 (week 3)
.
Collaboration policy and honor code:
 
Please read 
Stanford's honor 
code policy
. 
In the context of CS221, 
you are free to form study groups and discuss
homeworks and projects. 
However, you must write up homeworks and code from scratch independently, and you must acknowledge in your
submission all the students you discussed with. 
The following are considered to be honor code violations:
Looking at the writeup or code of another student.
Showing your writeup or code to another student.
Discussing homework problems in such detail that your solution (writeup or code) is almost identical 
to 
another student's solution.
Uploading your writeup or code to a public repository (e.g., GitHub) so that it can be 
accessed by other students.
Looking at solutions from previous years, either official or written up by another student, or found 
online.
When debugging code together, you are only allowed to look at the input-output behavior 
of each other's programs (so you should write good test
cases!). 
We periodically run similarity-detection software over all 
submitted student programs, including programs from past quarters and any 
solutions
found online on public websites.
Generative AI Policy:
 Each student is expected to submit their own solutions to the CS221 
Homeworks. 
The use of generative AI tools such as Co-Pilot
and ChatGPT to substantially complete an assignment or 
exam (e.g by entering exam or assignment questions) is strictly prohibited and will result in
honor code 
violations. We will be checking students' Homework submissions for honor code violations. Generative AI 
tools will only be allowed for
completing the final projects. Please refer to 
Stanford's Generative 
AI Policy Guidelines for more details.
Anyone violating the honor code policy will be referred to the Office of Judicial Affairs. 
If you think you violated the policy (it can happen, especially under
time pressure!), 
please reach out to us; the consequences will be much less severe than if we approach you.
Inclusion:
 
The CS221 teaching staff is committed to creating an inclusive and 
supportive learning environment for 
all
 students. 
Please be respectful to
your fellow students, course CAs, and instructors. 
If you see any problems, please reach out to us early.
Content
What is this course about?
 
The goal of artificial intelligence (AI) is to tackle complex real-world problems with rigorous mathematical 
tools. 
In this
course, you will learn the foundational principles and practice implementing various AI systems. 
Specific topics include machine learning, search,
Markov decision processes, game playing, constraint 
satisfaction, graphical models, and logic.
Prerequisites:
 
This course is fast-paced and covers a lot of ground, 
so it is important that you have a solid foundation in a number of areas. 
Here are
the basic skills that you need and the classes that teach those skills:
Programming (ideally Python): 
CS 106A
, 
CS 106B
, 
CS 107
Discrete math, mathematical rigor: 
CS 103
Probability: 
CS 109
Linear algebra: 
Math 51
It is less important that you know particular things (e.g., we 
don't use eigenvectors in this course even though that's a pillar 
of any linear algebra course),
and more important that you've done enough related things that you 
feel at ease with it. While it is possible to fill in the gaps, 
this course does move
quickly, and ideally you want to be focusing 
your energy on learning AI rather than catching up on 
prerequisites. 
We have made a few 
prerequisite
modules
 that you can review 
to refresh your memory, 
and the first homework (foundations) will allow you to also get some practice on these basics.
Further reading:
 
There are no required textbooks for this class, and you should be able to learn everything from the 
lecture notes and homeworks.
However, if you would like to pursue more advanced topics or get another 
perspective on the same material, here are some great resources:
Russell and Norvig. Artificial Intelligence: A Modern Approach. 
A comprehensive reference for all the AI topics that we will cover.
Koller and Friedman. Probabilistic Graphical Models. 
Covers factor graphs and Bayesian networks (this is the textbook for 
CS228
).
Sutton and Barto. Reinforcement Learning: An Introduction. 
Covers Markov decision processes and reinforcement learning (free online).
Hastie, Tibshirani, and Friedman. The Elements of Statistical Learning. 
Covers machine learning from a rigorous statistical perspective (free
online).
Tsang. Foundations of Constraint Satisfaction. 
Covers constraint satisfaction problems (free online).
Note that some of these books use different notation and terminology from this course, 
so it may may take some effort to make the appropriate
connections.
Coursework
Homeworks
 (60%): 
There are weekly homeworks. 
Each homework is usually centered around an application 
and has both written and programming
parts.
Homeworks must be typeset and submitted on Gradescope as a PDF. 
The coding portion will be autograded; you get only feedback on a subset of
the test cases. 
Autograding is strict, so check your outputs carefully! 
Read more about the 
policies
 around late days (7 total, max 2 per homework),
regrades, and submission.
Exams
 (40%):
Exam 1 (20%): Wednesday, 5/10 at 6-8 PM PT
.
Exam 2 (20%): Friday, 6/9 at 3:30-5:30 PM PT
.
Both exams will be closed-book and closed-source, except you are allowed one double-sided sheet 
(US letter or A4) of notes.
Non-SCPD Students:
 Since final exam times are scheduled by the registrar, we will 
not be accommodating alternate final exam times. All enrolled,
non-SCPD students must take 
the final exam in person on the given date.
SCPD Students:
 SCPD students will need to nominate exam monitors for both exams and 
coordinate the exam process with the 
SCPD exams 
team
.
Please refer to 
this 
link
 for more information on the process. For any additional questions, please reach 
out to the 
SCPD exams team
.
Project
 (optional, up to 2% extra credit): 
Use the tools from class to build something interesting of your choice!
Projects should be done in groups of 1-4 students.
Each project group will be assigned a CA mentor who will give feedback and answer questions.
For inspiration, check out 
previous CS221 projects
.
See 
the project page
 for more details.
The project will be something that you work on throughout the quarter and we have set up some milestones 
to help you along the way:
Project interest form [p-interest]
 (due 
April 21
)
Project proposal [p-proposal]
 (due 
May 5
)
Project progress report [p-progress]
 (due 
May 19
)
Project final report and video [p-final]
 (due 
June 5
)
Ed
 (up to 2% extra credit): 
Please help answer your classmates's questions on Ed! 
You will be awarded extra credit depending on how substantial
and helpful you were on Ed.
Schedule
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
Sunday
Week 1
Apr 3
Apr 4
Apr 5
Apr 6
Apr 7
Apr 8
Apr 9
Homework 
[Foundations]
Module 
[Prerequisites]
[Machine
Learning I]
Lecture: 
Introduction
(Sanmi) 
10:30am-
11:50am
 
Lecture: 
Machine
Learning I
(Sanmi) 
10:30am-
11:50am
 
Problem
Session 
3:00pm-4:20pm
[Solutions]
[Video]
Week 2
Apr 10
Apr 11
Apr 12
Apr 13
Apr 14
Apr 15
Apr 16
Homework 
[Sentiment]
Module 
[Machine
Learning II]
Lecture: 
Machine
Learning II
(Sanmi) 
10:30am-
11:50am
Foundations HW
due
Lecture: 
Machine
Learning III
(Sanmi) 
10:30am-
11:50am
 
Problem
Session 
3:00pm-4:20pm
[Problems]
[Solutions]
[Video]
 
Week 3
Apr 17
Apr 18
Apr 19
Apr 20
Apr 21
Apr 22
Apr 23
Homework 
[Route]
Module 
[Search]
Lecture: 
Search (Moses) 
10:30am-
11:50am
 
Sentiment HW
due
Lecture: 
Search &
Heuristics
(Moses) 
10:30am-
11:50am
 
Final Study List
Deadline
Problem
Session 
3:00pm-4:20pm
[Problems]
[Solutions]
[Video]
 
Week 4
Apr 24
Apr 25
Apr 26
Apr 27
Apr 28
Apr 29
Apr 30
Homework 
[Blackjack]
Module 
[MDPs]
Lecture: 
MDPs I (Moses) 
10:30am-
11:50am
Route HW due
Lecture: 
MDPs II (Moses)
10:30am-
11:50am
 
Problem
Session 
3:00pm-4:20pm
[Problems]
[Solutions]
[Slides]
[Video]
 
Week 5
May 1
May 2
May 3
May 4
May 5
May 6
May 7
Homework 
[Pacman]
Module 
[Games]
Lecture: 
Games I
(Moses) 
10:30am-
11:50am
Blackjack HW
due
Lecture: 
Games II
(Moses) 
10:30am-
11:50am
 
Problem
Session 
3:00pm-4:20pm
[Problems]
[Solutions]
[Video]
 
Project
Proposal due
Week 6
May 8
May 9
May 10
May 11
May 12
May 13
May 14
Module 
[CSPs]
Lecture: 
Factor Graphs
(Sanmi) 
Lecture: 
Beam Search
(Moses) 
Problem
Session 
3:00pm-4:20pm
10:30am-
11:50am
10:30am-
11:50am
Exam I: 6pm-
8pm
[Problems]
[Solutions]
[Slides]
[Video]
 
Week 7
May 15
May 16
May 17
May 18
May 19
May 20
May 21
Homework 
[Scheduling]
Module 
[Bayesian Nets]
Lecture: 
Bayesian Nets I
(Sanmi) 
10:30am-
11:50am
Pacman HW
due
Lecture: 
Bayesian Nets II
(Sanmi) 
10:30am-
11:50am
Problem
Session 
3:00pm-4:20pm
[Problems]
[Solutions]
[Slides]
[Video]
 
Project
Progress
Report due
Week 8
May 22
May 23
May 24
May 25
May 26
May 27
May 28
Homework 
[Car]
Module 
[Bayesian Nets
III / Logic I]
Lecture: 
Bayesian Nets
III (Sanmi) 
10:30am-
11:50am
Scheduling HW
due
Lecture: 
Logic I (Moses) 
10:30am-
11:50am
 
Course
Withdrawal /
Change of
Grading Basis
Deadline
Problem
Session 
3:00pm-4:20pm
[Problems]
[Solutions]
[Slides]
[Video]
 
Week 9
May 29
May 30
May 31
Jun 1
Jun 2
Jun 3
Jun 4
Homework 
[Logic]
Module 
[Logic II]
Memorial Day
Car HW due
Lecture: 
Logic II (Moses) 
10:30am-
11:50am
 
Problem
Session 
3:00pm-4:20pm
[Problems]
[Solutions]
[Slides]
[Video]
Week 10
Jun 5
Jun 6
Jun 7
Jun 8
Jun 9
Jun 10
Jun 11
Lecture: 
Conclusion 
10:30am-
11:50am
Project Final
Report due
Logic HW due
Lecture: 
Exam review
session 
10:30am-
12:20pm
 
[Problems]
[Solutions]
[Video]
Exam II: 3:30-
5:30pm

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
