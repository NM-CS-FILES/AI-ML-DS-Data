==================[Syllabus Start]==================
 1 Music  356 / CS 470 
Music and AI  
Stanford University  | Winter 202 4 
T/Th 10:30am-12:20pm 
 
Syllabus ( v1.03)
Instructor  
Ge Wang  
Associate Professor , Center for Computer Research in Acoustics (CCRMA)  
Department of Music (also Computer Science, by Courtesy)  
Senior Fellow & Associate Director, Stanford Institute for Human -centered AI  
ge@ccrma.stanford.edu  
https://ccrma.stanford.edu/~ge/  
Teaching Assistant  
Andrew Zhu Aday  
Ph.D. Candidate , CCRMA  
azaday @ccrma. stanford.edu  
Course Website  
https://ccrma.stanford.edu/courses/356 -winter -2024/  
Course Overview  
How do we make music with artificial intelligence? What does it mean to do so (and is it even a 
good idea)? How might we design systems that balance machine automation and human 
interaction? More broadly, how do we want to live with our technologies? Are there —and ought 
there be —limits to using AI for art? (And what is Art, anyway?) In this “critical making ” course, 
students will learn practical tools and techniques for AI -mediated music creation, engineer 
software systems incorporating AI, HCI and Music, and critically reflect on the aesthetic and 
ethical dimensions of technology.  
Coursework will span the practical ("how?"), the philosophical ("why?"), and the social ("for 
whom?"). Students will use these techniques and lenses to  think as broadly as possible about the 
implication s of AI in our world , and to  design interactive AI tools that keep human judgment in 
the loop. Through these exercises, we will explore AI might augment, not replace, human 
creativit y. 
Prerequisites  
1-2+ years of programming;  completion of Music 256 A/CS 476a or Music 220 B is 
recommended  but not necessary ; (the most important requisite : willingness to show up with 
some heart and compassion)  
 
 2 Teaching Philosophy  
We firmly believe that anyone can learn anything to which they put their earnest effort and 
thought. In this course, we also believe the answers to questions are secondary  and sometimes 
even irrelevant.  What truly matters here are the thoughtfulness  of the  questions we frame  and the 
effort  we put into the craft of design ing things .  Above  all, our aim is  for each student to acquire  
for themselves both “things to create with” and “things  to think with”  as tools that will stay and 
grow with them  for years to come.  
Course -specific Learning Goals  
As a student, you will  be able to  (in ranked order of priority) : 
1) understand the various roles AI plays or could potentially play in music  creation —and to 
be able to frame critical questions about Music and AI, considering  technical,  aesthetic, 
ethical, and cultural  contexts . 
2) conceptualize and prototype software systems , integrating  AI and music . 
3) demonstrate working knowledge of  the tools  used in this course , including audio and 
music synthesis in the ChucK programming language, Python/C++/PyTorch, Wekinator for 
interactive machine learning and music, and the newly developing C hAI (ChucK for AI).  
Textbook  
Course readings will consist of a curated list of articles probing into the technical, philosophical, 
social, and cultural dimensions of AI and music/art.  Students will also be tasks to bring readings 
of interest to share.  
Workload Expectations  
Students are expected to devote a t least five hours  of preparation out of class for each 80 minutes 
of class time, for a minimum of ten hours of preparation per week.  
Grading Expectations  
Your work will be evaluated on completion, thoughtfulness, effort —in short, the personal  
integrity with which you carry out your work  in the following  aspects : 
• Weekly reading  responses  + programming etudes  (20%) 
• Two significant  programming assignments  (30%) 
• Final project: “design your own interactive AI-based system”  (25%) 
• Milestone Presentation and general participation  (25%) 
Class meetings  are synchronous; attendance is required (within reason)  
Attendance at lectures and milestones are synchronous and required .  If a student  falls ill or 
have  a personal situation that would affect their ability to attend , the student should contact the 
instructors before missing lecture or section . Under certain conditions ( including illness), a 
student may be provided an opportunity to make up the work missed in section.  
 
 3 Course Policies  
1. Participation  in milestone presentations and discussion  is a significant  part of your grade 
(25%). Please join class  meetings  on time, showing evidence of having done the work (readings, 
assignments, milestones)  by sharing your questions, analyses, critiques, and informed comments.  
 
2. As a rule , no late work will be accepted  except for family or health accommodations .  Please 
contact the instructors  as early as possible in these cases.  
 
3. Please think of this course in lectures and sections as a safe place to be yourself and while 
respecting others.  As the Platinum Rule  states : always treat others as they would have you treat 
them.  
The Honor Code  
Violating the Honor Code is a serious offense, even when the violation is unintentional. The 
Honor Code is available at the URL below.   Students are responsible for understanding the 
University rules regarding academic integrity. In brief, conduct prohibited by the Honor Code 
includes all forms of academic dishonesty, among them copying from another’s exam, 
unpermitted collaboration and representing as one’s own work the work of another. If students 
have any questions about these matters, they should contact their fellow. 
https://studentaffairs.stanford.edu/communitystandards/honorcode  
FERPA: Student Record Privacy Policy  
http://studentaffairs.stanford.edu/registrar/students/ferpa  
Students with Documented Disabilities  
Students who may need an academic accommodation based on the impact of a disability must 
initiate the request with the Office of Accessible Education (OAE). Professional staff will 
evaluate the request with required documentation, recommend reasonable accommodations, and 
prepare an Accommodation Letter for faculty dated in the current quarter in which the request is 
being made. Students should contact the OAE as soon as possible since timely notice is needed 
to coordinate accommodations. The OAE is located at 563 Salvatierra Walk (phone: 650-723-
1066 ; web: http://oae.stanford.edu ). 
 
Acknowledgement s 
This course and its design are supported by Stanford HAI (research and teaching), Computer 
Science and Music Departments, Symbolic Systems , and CCRMA.  
  
 4 Music and AI: Three “Pillar” Topic Areas  
 
A Practical Survey of AI Techniques  for Music  
• GOFAI  techniques (constrain t-based systems ; algorithmic composition ) 
• Machine learning techniques for musical information retrieval  (k-NN, SVM, HMM , etc.) 
• Survey of deep artificial  neural networks  and beyond for music and art  (RNN,  GAN s, VAEs, 
diffusion models , transformers and LLMs , etc. ) 
• Interactive machine learning: combining AI and HCI  
 
System Design  
Architecting software systems for AI and music  
Discriminative systems; building tools  for analysis  
Generative systems ; designing  creativity support tools  
Ethical -aesthetic considerations ( What is good? for whom? accessibility and inclusive design)  
Interactive machine learning  
 
Philosophical issues of Music and AI  
• “How might we best balance machine automation and meaningful human interaction?”  
• “Ought there be limits? What should they be?”  / “Is this even a good idea?”  
• “How do we reconcile the meaning of AI-generated aesthetic output?” / “Is it Art  if generated 
by a machine ?” / “What is Art, anyway?”  
• “By whom and for whom? Who does this serve and who is left out?”  
Assignments and Evaluation  
 
Reading Responses  + Programming Etudes (weekly)  
• Written responses  should be 400-500 words in length, and clearly demonstrat e understanding 
of the material. They should favor reflection over synopsis.  Feel free to pose well -framed 
questions in your responses.  
• Programming Etude s are small exploratory coding exercises  are designed to experiment with 
a particular idea or technique , often to produce a  brief  musical or otherwise creative statement.  
You are expected to comment thoughtfully and briefly (150-200 words) on your outcome in 
these etudes . 
 
• Significant Programming Assignments  (2): these directed programming project  involve  
observation, reflection, and software design , as well as studio -like milestone peer critique. The 
general topics of the (two) assignments includes  
1) designing, training, and evaluating a system for musical genre/sentiment classification  
2) a generative music system , using various techniques presented in the course so far.  
 
• Final Project : the medium -scale project asks  students to conceptualize and prototype an 
artfully designed interactive  AI music software system , integrating the technical, philosophical, 
and system -building dimension s of the course.  
 

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
