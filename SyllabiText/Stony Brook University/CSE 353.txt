==================[Syllabus Start]==================
CSE353: Machine Learning
Fall 2020, Time: Tuesdays, Thursdays, 3.00–4.20pm, Zoom Online
Instructor: 
Minh Hoai Nguyen
, New CS 243. 
Office hours: Thursdays & Fridays 5.30–6.15pm, and by appointments
TA: TBA.
Click here for Zoom link
 You will need to sign in with your NetID Google Account to view.
This page provides some information to students who are considering to enroll in the course. Below are tentative grading scheme and
syllabus, which are subject to change. Once you have enrolled in the course, you should go to Blackboard for updated information
and futher annoucements. The content of this page will not be updated two weeks after the course has begun.
Description
This course covers fundamental machine learning concepts for intelligent systems that autonomously learn to perform a task and improve
with experience, including problem formulations (e.g., selecting input features and outputs) and learning frameworks (e.g., supervised vs.
unsupervised), standard models, methods, computational tools, algorithms and modern techniques, as well as methodologies to evaluate
learning ability and to automatically select optimal models. Applications to areas such as computer vision (e.g., image classification,
object detection) and medical data analysis (e.g., Covid-19 prediction) will motivate the coursework and material.
This course is intended for ungraduate students who already have good programming skills and adequate background knowledge in
mathematics, including probability, statistics, and linear algebra. The prerequisites are: CSE 216 or CSE 219 or CSE 260; CSE major
Pre- or Co-requisite: AMS 310 or AMS 311 or AMS 312.
Tenative grading scheme
There will be 5-6 homework assignments, two exams, and several popup quizzes.
Exams and quizzes: 50%
Midterm 1: 20%
Midterm 2: 20%
Quizzes: 10%
Homework assignments: 50%
Weights are approximate and subject to change. You are expected to do homework assignments by yourselves. Even if you discuss
them with your classmates, you should turn in your own code and write-up. You can have one sheet of paper with notes in the exams.
Tentative Syllabus
Week
Date
Topic
Assignments
1
25-Aug-2020
Introduction
27-Aug
Point estimation, MLE, probability review
2
1-Sep
Point estimation, MLE, probability review
3-Sep
Linear Regression
HW1 out
3
8-Sep
Logistic Regression
10-Sep
Logistic Regression
4
15-Sep
Model complexity and error measurement
17-Sep
Model complexity and error measurement
HW1 due. HW2 out
5
22-Sep
Regularization, Ridge and LASSO regression
24-Sep
Regularization, Ridge and LASSO regression
6
29-Sep
Bayes Classifier and Nearest Neighbor
1-Oct
SVM
HW2 due. HW3 out
7
6-Oct
SVM - Duality
8-Oct
No lecture - Midterm 1
Midterm 1
8
13-Oct
SVM - Kernel
15-Oct
Decision Tree
HW3 due. HW4 out
9
20-Oct
Decision Tree
Page generated 2020-10-25 09:04:27 EDT, by 
jemdoc
.
22-Oct
Ensemble learning
10
27-Oct
Boosting
29-Oct
Unsupervised learning, K-means clustering, GMM
HW4 due. HW5 out
11
3-Nov
Artificial Neural Networks
5-Nov
Training Deep Networks
12
10-Nov
Convolutional Neural Networks
12-Nov
Convolutional Neural Networks
HW5 due. HW6 out
13
17-Nov
Recurrent Neural Networks
19-Nov
No lecture - Midterm 2
Midterm 2
Break
24-Nov
No lecture - Thanksgiving
26-Nov
No lecture - Thanksgiving
14
1-Dec
Overview of Advanced Machine Learning Topics
3-Dec
Final lecture - Course review
HW6 due
Textbooks
Textbooks are optional. But if you prefer to follow a textbook, I recommend:
Tom Mitchell, 
Machine Learning
, McGraw Hill, 1997.
Excellent book. Concise and well-explained. But it is quite old and does not cover recently developed concepts.
Some 
New Chapters
 are available
Aurélien Géron 
Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Ed
I haven't read it yet, but it seems to have good reviews on Amazon.
Scikit-Learn is useful tool to use
Student Accessibility Support Center Statement
If you have a physical, psychological, medical, or learning disability that may impact your course work, please contact the Student
Accessibility Support Center, 128 ECC Building, (631) 632-6748, or via e-mail at: 
sasc@stonybrook.edu. They will determine with
you what accommodations are necessary and appropriate. All information and documentation is confidential.
Academic Integrity Statement
Each student must pursue his or her academic goals honestly and be personally accountable for all submitted work. Representing
another person's work as your own is always wrong. Faculty is required to report any suspected instances of academic dishonesty to the
Academic Judiciary. Faculty in the Health Sciences Center (School of Health Technology & Management, Nursing, Social Welfare,
Dental Medicine) and School of Medicine are required to follow their school-specific procedures. For more comprehensive information
on academic integrity, including categories of academic dishonesty please refer to the academic judiciary website at
http:
www.stonybrook.edu
commcms
academic_integrity/index.html
Critical Incident Management
Stony Brook University expects students to respect the rights, privileges, and property of other people. Faculty are required to report to
the Office of University Community Standards any disruptive behavior that interrupts their ability to teach, compromises the safety of the
learning environment, or inhibits students’ ability to learn. Faculty in the HSC Schools and the School of Medicine are required to follow
their school-specific procedures. Further information about most academic matters can be found in the Undergraduate Bulletin, the
Undergraduate Class Schedule, and the Faculty-Employee Handbook.

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
