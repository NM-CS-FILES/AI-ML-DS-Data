==================[Syllabus Start]==================
CS 161 - Fundamentals of Artificial Intelligence - Fall 2022
Instructor:
 Professor 
Guy Van den Broeck
 <
guyvdb@cs.ucla.edu
>; 
Office Hours: Tuesday 8.30am-9.30am
TA:
 Zhe Zeng <
zhezeng@g.ucla.edu
> ; 
Discussion 1A: Broad Art Center 2160E / Friday / 12pm-1:50pm; 
Office hours: Zoom (link on
Bruinlearn), Friday 
9-11 AM
TA:
 Xuheng Li <
xuhengli99@ucla.edu
> ; 
Discussion 1B: Renee and David Kaplan Hall A65 / Friday / 12:00pm-1:50pm; 
Office hours: Zoom
(link on Bruinlearn), Tuesday 9-11 AM
TA:
 Tung Nguyen <
tungnd@g.ucla.edu
> ; 
Discussion 1C: Bunche Hall 3211 / Friday / 2pm-3:50pm; 
Office hours: Zoom (link on Bruinlearn),
Monday 1-3 PM
TA:
 Honghua Zhang <
joshuacnf@g.ucla.edu
> ; 
Discussion 1D: Royce Hall 162 / Friday / 2pm-3:50pm; 
Office hours: Zoom (link on
Bruinlearn), Thursday 
9-11 AM
Lecture:
 Fall 2022, MW 10am-11:50am; HAINES 39
BruinLearn:
 
https://bruinlearn.ucla.edu/courses/140099
Course Description
This course studies the design of intelligent agents. It introduces the fundamental problem-solving and knowledge-representation paradigms
of artificial intelligence. We will study the AI programming language LISP, state-space and problem reduction methods, brute-force and
heuristic search, planning techniques, two-player games, and recent developments in game AI. In knowledge representation and reasoning, we
will cover propositional and first-order logic and their inference algorithms. Finally, the course covers probabilistic approaches to AI, such as
Bayesian networks, and machine learning algorithms to improve the agent's performance with experience.
Prerequisites
This course requires knowledge of basic computer science, algorithms, complexity analysis, and programming principles.
Class Attendance
Class attendance is not required. However, if you miss part or all of a class, it is your responsibility to retrieve relevant information, material,
announcements, etc., from friends and classmates. Some limited material will not be covered by the textbook.
Grading
Grading will be based on Homework (20%), Midterm (35%) and Final (45%). Midterm and final will be closed book. Midterm will be a mix of free-
form and multiple choice questions. Final will be entirely multiple choice. You are allowed to bring a simple calculator.
Homeworks
Regular homeworks will be announced with a one-week deadline. 
The late policy subtracts 25% of the total points for each day you submit late.
Make sure to read the honor code below.
Textbook
Stuart Russell and Peter Norvig. 
Artificial Intelligence: A Modern Approach.
 (4th Edition), Pearson 2020.
Available from:
UCLA Bookstore
Online Stores
The Publisher
Schedule
Week
Date
Topic
Week 1
Sep 26
Course introduction: What is AI?
Sep 28
Problem solving as search
Sep 28
Problem solving as search
Week 2
Oct 3
Uninformed search strategies
Oct 5
Informed search strategies
Week 3
Oct 10
Heuristics
Oct 12
Constraint satisfaction
Week 4
Oct 17
Constraint satisfaction
Oct 19
Local search
Week 5
Oct 24
Game playing
Oct 26
Game playing
Week 6
Oct 31
Midterm exam
Nov 2
Propositional logic: Representation
Week 7
Nov 7
Propositional logic: Inference
Nov 9
Propositional logic: Inference
Week 8
Nov 14
Reasoning under uncertainty
Nov 16
Bayesian Networks
Week 9
Nov 21
Machine Learning Basics
Nov 23
Machine Learning Basics
Week 10
Nov 28
First-order logic: Representation
Nov 30
First-order logic: Inference
Week 11
Dec 8
Final exam
Additional Readings
David Poole and Alan Mackworth. 
Artificial Intelligence: Foundations of Computational Agents
Peter Seibel, 
Practical Common Lisp
Guy L. Steele Jr., 
Common Lisp the Language, 2nd Edition
Honor Code
You are encouraged to work on your own in this class. If you get stuck, you may discuss the problem with up to two other students, 
PROVIDED
THAT YOU SUBMIT THEIR NAMES ALONG WITH YOUR ASSIGNMENT
. 
ALL SOLUTIONS MUST BE WRITTEN UP INDEPENDENTLY, HOWEVER
.
This means that you should never see another student's solution before submitting your own. You may always discuss any problem with me or
the TAs. 
YOU MAY NOT USE OLD SOLUTION SETS UNDER ANY CIRCUMSTANCES
. Making your solutions available to other students, 
EVEN
INADVERTENTLY
 (e.g., by keeping backups on github), is aiding academic fraud, and will be treated as a violation of this honor code.
You are expected to subscribe to the highest standards of academic honesty. This means that every idea that is not your own must be explicitly
credited to its author. Failure to do this constitutes plagiarism. Plagiarism includes using ideas, code, data, text, or analyses from any other
students or individuals, or any sources other than the course notes, without crediting these sources by name. Any verbatim text that comes from
another source must appear in quotes with the reference or citation immediately following. 
Academic dishonesty will not be tolerated in this
class. Any student suspected of academic dishonesty will be reported to the Dean of Students. A typical penalty for a first plagiarism offense is
suspension for one quarter. A second offense usually results in dismissal from the University of California.

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
