==================[Syllabus Start]==================
Syllabus
CSCI 3202
Artificial Intelligence
Tu, Th 12:30 - 13:45
ECCR 150
Instructor
Professor Michael Mozer
 (
mozer@cs.colorado.edu
)
Department of Computer Science
Engineering Center Office Tower 7-41
(303) 492-4103
Office Hours:  W 11:30-12:30, Th 14:00-15:00
Teaching Assistant
Michael Howe (
michael.howe@colorado.edu
)
Office Hours: M 11:30-12:30, F 10:00-11:00 (beginning Sep 3), 
ECCS 1B23
Course Objectives
This course surveys techniques involved in creating computer systems that engage in intelligent human-like behavior.  Although Artificial
Intelligence (AI) has received a lot of play in the media, the true state of AI research is nowhere near the vision depicted in the movie of the
same name, or in the 
Matrix
 and 
Terminator
 series.  The goal of this course is to present a realistic view of the state of AI techniques and
research, and for students to develop small systems that exhibit learning and intelligent behavior.
Although AI as a field has been around since the 1960's, in the past decade it has undergone a radical transformation.  The traditional
approach to AI was based on 
symbol processing
:  the mind was conceived of as a 
symbol processing engine
 that creates and manipulates
symbol strings.  The modern approach to AI treats the mind a  
statistical and probabilistic computing engine.
  CSCI 3202 will
emphasize the modern approach.
Prerequisites
CSCI 3104 and CSCI 3155 are the official prerequisites.  However, it will also be useful for you to have had linear algebra and some
background in probability and statistics.
Course Materials
Text
The course text is 
Artificial Intelligence:  A Modern Approach 
(Second Edition) by Russell & Norvig.  This text is difficult but
thorough and state-of-the-art.  We will focus on the second half of the text, which covers current trends in AI.  Some resources
related to the text, including code, are available 
here
.
Computers
You may do homework assignments using any programming language that you are comfortable with, and you may use your own
machine, the CSEL facilities, or the ITS facilities on campus.   Please see the TA if you need help gaining access to computing
facilities.
Course Schedule
Class Date
Lecture Topic
Reading
Homework
Aug 24
Introduction
Homework 1 assigned
Aug 26
Examples of AI systems
Homework 1 due
Aug 31
History of AI
Ch. 1
Sep 2
Intelligent agents
Ch. 2, Section 7.2
Homework 2 assigned
Sep 7
Representing uncertainty I
Ch. 13 (don't worry about logic
rules on p. 463); Section A.3
Sep 9
Representing uncertainty II
Homework 2 due;
Homework 3 assigned
Sep 14
Reasoning under uncertainty I
Ch. 14
Sep 16
Reasoning under uncertainty II
Homework 3 due
Sep 21
Reasoning under uncertainty III
Homework 4 assigned
Sep 23
Simple decision making
Ch. 16
Sep 28
Sequential decision making
Sections 17.1-3
Sep 30
No class -- Fall break
Oct 5
Reinforcement learning I
Ch. 21
Oct 7
Reinforcement learning II
Homework 4 due;
Homework 5 assigned
Oct 12
Supervised learning I
Sections 18.1-3
Oct 14
Supervised learning II
Section 20.4
Oct 19
Supervised learning III
Sections 20.1-2
Homework 5 due;
Homework 6 assigned
Oct 21
Neural networks I
Section 20.5; Section A.2
Oct 26
Neural networks II
Oct 28
Neural networks III
Homework 6 due;
Homework 7 assigned
Nov 2
Amplifying human capabilities with AI (
Gerhard Fischer)
to be announced
Nov 4
Application:  Data mining
Mozer et al. (2000)
Nov 9
Application:  Adaptive control
Mozer (2004)
Nov 11
Ensemble methods
Section 18.4
Nov 16
Speech recognition
Chapter 15
Homework 7 due;
Homework 8 assigned
Nov 18
Exploiting chaos 
(
Liz Bradley
)
web link
Nov 23
Cognitive modeling
Mozer et al. (2004)
Nov 25
Thanksgiving -- No Class
Nov 30
Game AI:  Collaborating agents in game design (
Alex
Reppenning
)
to be announced
Dec 2
Vision (
Jane Muilligan)
Chapter 24
Homework 8 due
Dec 7
Robotics (
Greg Grudic)
Chapter 25
Dec 9
Philosophical issues; Directions of AI research
Chapters 26, 27
Course Requirements
Reading
Reading assignments from the Russell & Norvig text are listed in the course schedule above.  I suggest that you attend lecture and
then attempt to read the corresponding material in the text, because the more mathematical sections of the text are challenging, and I'll
present the highlights of the text which should help in understanding the details when you read the text.
Lectures
Class attendance is mandatory.  If you find that you are not getting a lot out of lectures--either because the material is too basic or too
complex--it is your job to let me know, and I'll adjust the lectures.
Homework Assignments
Although students may understand AI techniques in principle by reading the book and attending lectures, there is no substitute for the
sort of understanding one obtains by actually implementing a technique and trying it out on a problem, even if the problem is small
relative to the sort of problems we wish AI system to tackle.  To this end, the course will entail 8 homework assignments. For the
assignments inovlving programming, you may use whatever language you are most comfortable with -- Java, C++, python, matlab,
etc.
Because the course schedule is tentative, homework due dates may change.  However, when homework is assigned, the due date will
be indicated, and it is 
not
 flexible.  Late assignments will not be accepted.  Assignments must be turned in at the start of class on the
assignment due date.  If you anticipate any difficulty turning in your homework on time, let your professor know 
at the time when it
is assigned
.
Tentatively, 
the homeworks will be weighted as follows:
Homework #
Topic
Weighting
1
Research existing AI systems
5%
2
Wumpus world agent
10%
3
Probability theory
10%
4
Probabilistic inference
10%
5
Reinforcement learning
15%
6
Simple classifiers
10%
7
Neural networks
15%
8
Final project
25%
Exams
We will have a final exam, at the time scheduled by the university
,
 which is Saturday December 11, 7:30 p.m. - 10 p.m.  The exam
will be cumulative, and will focus on evaluating your understanding of material that was presented in the course but not central to the
homework assignments (e.g., guest lectures).  
Semester Grade
Semester grades will be based 80% on the homework assignments, 20% on the final.
Academic Honesty
In accordance with the University 
Honor Code
, you may not give nor receive unauthorized assistance on the homework.  "Unauthorized
assistance" includes help on designing solutions to homework problems or sharing of code.  You are encouraged to discuss course material
with fellow students, but you are not to use any code anyone else has written as your own.  You should limit your discussion of homework
assignments to understanding the requirements of the assignment.  If you have questions about how to approach the problem, or get stuck
working on your solution, you should talk to the professor or TA.

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
