==================[Syllabus Start]==================
CS 418 INTRODUCTION TO DATA SCIENCE
University of Illinois at Chicago, Spring 2019
Lecture time: 
MW 4:30-5:45pm
Location: 
LC D5
Instructor
: 
Prof. Elena Zheleva
 (../../)
Office hours
: Tue 3-5pm, SEO 1140
Contact:
 
ezheleva@uic.edu
 (mailto:ezheleva@uic.edu)
TA1
: Usman Shahid
Office hours
: TBD
Contact:
 hshahi6@uic.edu
TA2
: Mao Li
Office hours
: TBD
Contact:
 mli206@uic.edu
"Our ability to collect, manipulate, analyze, and act on vast amounts of data is having a profound impact on all aspects of
society. This transformation has led to the 
emergence of 
data science
 as a new discipline
. 
The explosive growth of interest
in this area has been driven by research in social, natural, and physical sciences with access to data at an unprecedented
scale and variety, by industry assembling huge amounts of operational and behavioral information to create new services
and sources of revenue, and by government, social services and non-profits leveraging data for social good. This emerging
discipline relies on a novel mix of mathematical and statistical modeling, computational thinking and methods, data
representation and management, and domain expertise."
 
--
Committee on Data Science, Computing Research Association
 (https://cra.org/data-science/)
COURSE DESCRIPTION
This course provides an in-depth overview of data science from a computer science perspective. Topics include modeling,
storage, manipulation, integration, classification, analysis, visualization, information extraction, and big data. The course is
programming-intensive and an emphasis will be placed on tying data science concepts to specific real-world applications
through hands-on experience.
PREREQUISITES
Working knowledge of probability, data structures and algorithms, and ability to (learn to) program in Python.
COURSE MATERIALS
We will use 
Piazza
 (https://piazza.com/uic/spring2019/cs418)
 for the course schedule, discussions, and materials, and
Gradescope
 (https://gradescope.com/courses/35901)
 for grading. 
Python is the programming language used for homework assignments. We will use Google Cloud for big data computing
thanks to a generous grant that Google Cloud provided for this course.
STUDENT DELIVERABLES
Programming-based homework assignments - 30%
Midterm exam - 20%
Bi-weekly quizzes - 15%
Class project - 35%
TEXTBOOKS
No textbook is required. Readings will be assigned, using multiple online sources, including:
[PTDS] 
Principles and techniques of data science
 (https://www.textbook.ds100.org/)
. Lau, Gonzalez, Nolan. 
[MMD] 
Mining of massive datatasets
 (http://infolab.stanford.edu/~ullman/mmds/bookL.pdf)
. Leskovec, Rajaraman, Ullman. 
[FDV] 
Fundamentals of data visualization
 (https://serialmentor.com/dataviz/)
. Wilke. 
[CIT] 
Computational and Inferential thinking
 (https://www.inferentialthinking.com)
. Adhikari, DeNero. 
[CIML] 
A course in machine learning
 (http://ciml.info/)
 [
Errata
 (https://github.com/hal3/ciml/issues)
]
. Hal Daume III.
SCHEDULE
Date
Topic
Assigned Reading
Announcements
1/14
Welcome to Data Science
Quiz 0 out
1/16
Data science lifecycle, data
design and sampling
Syllabus, PTDS: Chapters 1-2
Quiz 0 due 11:59pm
1/21
MLK Day - no class
1/23
Hypothesis testing
CIT: Chapter 11
Pre-lab assignment
out
1/28
Lab 1: Data processing with
pandas
PTDS: Chapter 3
Project
Requirements out 
Quiz 1 out
1/30
Class canceled due to
inclement weather
Quiz 1 due
11:59pm, Jan. 30
2/4
Lab 2: Web scraping and
data collection
PTDS: Chapter 7
2/6
Data cleaning and
exploratory data analysis
PTDS: Chapters 4-5
HW 1 (the two labs)
due 11:59pm, Feb.
10
2/11
Data visualization
PTDS: Chapter 6
Quiz 2 out
2/13
Data visualization
FDV: Chapters 1-2
Quiz 2 due 2/13
11:59pm 
Project proposal
due 2/14 11:59pm 
HW 2 out
2/18
Models and estimation
PTDS: Chapter 10
Sign up for project
check-in slot on 3/5
2/20
Probability and
generalization
PTDS: Chapter 12
2/25
Supervised learning:
decision trees
CIT: Chapter 17
Quiz 3 out
2/27
Supervised learning:
geometric view
CIML: Chapter 1
Quiz 3 due 11:59pm
2/27 
HW 2 due 11:59pm
2/28
3/4
Supervised learning: linear
and non-linear models
PTDS: Chapter 13
Project check-in 3/5
Supervised learning: bias-
Post-check-in
3/6
variance tradeoff,
ensembles
PTDS: Chapter 8 CIML: 5.6
proposal slides due
11:59pm 3/8
3/11
Supervised learning:
practical issues, regression
PTDS: Chapter 13 CIML: Chapter 5.5, 6.2
Quiz 4 out
3/13
Unsupervised learning
CIML: 3.4
Quiz 4 due 11:59pm
HW 3 out
3/18
Midterm review
3/20
Midterm exam
3/25
Spring break
3/27
Spring break
4/1
Databases and SQL
PTDS: Chapter 9
4/3
Data science in the real
world
Invited talk by Dr. Plamen
Petrov, VP of AI for 
Anthem
(https://www.anthem.com/)
HW 3 due 11:59pm
4/3
4/8
Databases and SQL
PTDS: Chapter 9
4/10
Large-scale data processing
MMD: Chapter 2
HW 4 out 
Project
progress report due
11:59pm, April 11
4/15
Recommender systems
MMD: Chapter 9
Quiz 5 out
4/17
A/B testing
PTDS: Chapter 18
Quiz 5 due 11:59pm
4/22
Ethics in data science
Guest lecture by Dr.
Emanuelle Burton
Main reading:
Who's Using Your Face - The Ugly Truth About Facial Recognition
(https://www.ft.com/content/cf19b956-60a2-11e9-b285-
3acd5d43599e)
 
Optional:
Why You Can No Longer Get Lost in the Crowd
(https://www.nytimes.com/2019/04/17/opinion/data-privacy.html)
 
Microsoft Denied Police Facial Recognition Tech Over Human
Rights Concerns
(https://www.theverge.com/2019/4/17/18411757/microsoft-facial-
recognition-sales-refused-police-access)
 
NYPD Claws Back Documents On Facial Recognition
(https://www.nydailynews.com/new-york/ny-nypd-facial-recognition-
disclosures-20190414-ifwgro76cje5tgiyq6wqsty7ou-story.html)
4/24
Social network analysis
MMD: Chapter 10
HW 4 due 11:59pm
4/25
4/29
Final project presentations
Presentations due
at noon Quiz 6 out
5/1
Final project presentations
Quiz 6 due 11:59pm
5/7
Final project due
Final project due
11:59pm

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
