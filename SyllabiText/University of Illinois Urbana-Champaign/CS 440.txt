==================[Syllabus Start]==================
CS 440/ECE 448
Fall 2023
Margaret Fleck
Syllabus
Instructor
This course is taught by
Margaret Fleck
 
mfleck@illinois.edu 
3214 Siebel 
or 1222 Siebel (inside the CS Undergraduate Office)
Neither office has a working phone, so please use email to contact me or post on our piazza forum
Course description
This course provides an introductory survey of concepts and techniques in artificial intelligence. 
We will cover methods for search, classification,
reasoning, and machine learning. 
We will also look at applications including core AI (games, planning), robotics, computer vision, and natural
language understanding.
This course assumes that you have taken 
data structures (CS 225) and probability and statistics (CS 361, ECE 313, STAT 400, MATH 461, or
BIOE 310). 
Notice that 
our data structures course implies that you have taken discrete math (CS 173) and Calculus I. CS 440 is intended to be a
first course in AI. 
If you have already taken a specialized AI course (e.g. CS 446), be prepared for a repeat of 
some familiar material.
Class meetings and office hours
Our meeting time is MWF 9-9:50 in 0027/1025 Campus Instruction Facility (aka the big auditorium).. 
In-class lectures will be recorded and
lecture notes posted. 
Some pre-recorded lecture material may be used, especially to handle technical glitches (e.g. classroom projector won't turn
on).
There will be in-class quizzes every other Friday starting with week 3. 
MPs
 will be due Mondays starting week 4. See the 
schedule page
 for
details.
An office hour schedule (instructor and TAs) will be posted during the first week of classes. Meanwhile, catch Margaret at the end of lecture to talk
or set up a time to talk. Office hours will be a mix of in-person and online, depending on the current state of diseases on campus (e.g. Covid 19)
and how crowded our building is.
Readings and equipment
Lecture notes will be posted on the 
schedule page
. Supplementary readings are posted on the 
readings page
.
All critical information should be in the posted notes. You may, optionally, wish to buy a copy of 
Russell and Norvig, 
Artificial Intelligence: A
Modern Approach
. The fourth edition is the most recent version. Used copies, third edition, paperback (aka international) and electronic editions
are also fine.
You will also need a reference for Python, which we will use to write the MPs. A good place to start is the the 
Python Tutorial
. You should install
version 3.8. 
If you'd like a hardcopy reference for the basics, 
the 
hardcopy version 3.6 tutorial
 is still a good place to start because it covers
features that haven't changed much.
Quizzes will 
will require a portable device. 
They will be browser-based, so a wide range of devices should work ok. 
However, it's best to have a
real keyboard because you'll need to be able to type extended (e.g. 1-2 paragraph) answers.
Late registration, auditing, and changes of credit hours
As long as we have enough seats, it's ok for non-registered students to sit in on lectures. 
You can (obviously) also do MPs on your own. However,
non-registered students may not take the quizzes.
Students may not add the class after add date (10 day of classes).
Please tell me right away if you change your credit hours (3 vs. 4 hours) so that I can ensure you are given the appropriate version of the quiz on
moodle.
Home
Syllabus
Schedule
Readings
Staff
MPs
Quizzes
Piazza
Gradescope
Moodle
Help!
You may change from 3 to 4 credit hours up until you take the first quiz. 
After that, I will only approve the change in emergency situations.
You may change from 4 to 3 credit hours as late as drop date (Oct 13th). 
However, I will not adjust the scores for quizzes you have already taken.
Electronic tools
See the top menu for links to piazza, gradescope, and moodle.
Gradescope: 
for submitting MPs
Moodle: 
quizzes, the gradebook.
Piazza: 
questions and discussion.
If you registered at least a week before the start of classes, you should find that you are enrolled in the class on all three sites. 
The rest of you might
or might not be on these sites yet, but you can add yourself. The moodle self-enrollment key is "Hedwig". 
The Gradescope access key is
7GRYRE.
On the external sites (Gradescope and Piazza), please enroll using your illinois.edu email address. If you would prefer not to do this, e.g. for
privacy reasons, 
contact the instructor to be added under an alternate email address. We need to be able to match your external email to the roster
for purposes such as moving MP grades from Gradescope to Moodle.
Graded work
We plan 12 MPs, 6 quizzes, and a short final exam (aka Quiz 7). 
4-hour students will take modified quizzes which also include questions on
technical reading (approximately one accessible conference paper for each quiz). 
See the 
quiz page
 for more details.
Grading Formula
MP average 60%.
Quizzes and final exam 40%
The final has the same weight as one quiz.
For students taking the course for 3 credit hours, the two lowest MP scores will be dropped. 
Be aware that some MPs build on previous MPs,
notably pairs of adjacent MPs with similar names. This means that it's safe to skip some MPs and unwise to skip others. We will make these
dependencies clear as the MPs are posted.
To get a letter grade of A+, you must complete all MPs with a grade of at least 80% on each (in addition to having a high course average).
The translation into letter grades will be at least as generous as the standard high school scale. 
That is,
90% is at least an A-.
80% is at least a B-.
70% is at least a C-.
The threshold for passing (D-) is 50%.
I may move these cutoffs downwards (i.e. raising the letter grades) if the raw scores seem to be running lower than I intended. Historically, such
adjustments have rarely been more than 
a couple percentage points. 
Because the work is different, the adjustments for the 4-hour students may
differ from those for the 3-hour students.
Regrades, makeups, late submissions
Makeups for each quiz will be held in class in the same period as the next quiz. See 
the Quizzes page
 for details. Ad-hoc makeup times will be
arranged only in rare cases (e.g. extended illness, students with DRES accommodations). Makeups for Quiz 6 will be at the final exam.
Makeups are for students who have not yet taken the quiz. 
You do not need special permission or documentation to take the makeup.
For each MP, we expect you to have preliminary submissions well ahead of the deadline. 
Each MP deadline has a two-day grace period for
managing most normal problems that may arise close to the deadline (e.g. short illness). The grace period will not be extended if you start the MP
very late and then have some other problem arise. See below for discussion of major problems that may be beyond your control.
Regrade requests should be posted to the regrade folder on piazza. They must be submitted within a week after the grade and feedback comments
have been released. 
The course staff reserves the right to regrade not only the items questioned by the student, but also the other parts of the
assignment or test.
Academic integrity
Programs and reports that you submit must be your own work. You may not look at another student's code or copy from it. You may not copy
significant quantities of material from external sources except as specifically directed in the instructions for the assignment. 
You may not use tools
(e.g. large language models) to write significant quantities of text/code for you.
You are encouraged to discuss assignments at a high level with other students (e.g. how is a perceptron supposed to work?). You should also feel
free to share information about basic utilities (e.g. how do I open a file in Python?). 
It is ok to conduct this discussion online, e.g. on piazza.
Similarly, you may look at external sources for general tips and copy small fragments of code (e.g. an example of how to invoke some standard
utility).
There is a grey area where you may be copying something that is interesting but seems small within the context of the whole assignment, 
e.g. an
interesting algorithm trick or formula. In this case, you must properly acknowledge the source, e.g. using comments in your code. 
Be aware that the
MPs in this course are intended to be built largely from scratch, so your grade will be reduced if these external aides make the assignment
significantly easier.
If you aren't sure, ask the course staff.
Similarly, do not make your work available to other students, either deliberately or negligently. Extended fragments of code should be shown only
to course staff, not to other students. Details of MP solutions should be discussed with another 
student only after the grace period, plus any
individual extensions the two of you might have. 
It is your responsibility to check. Similarly, discuss quiz questions and solutions only after both of
you have taken the quiz. Do not post this information in public places (e.g. github).
If you have reason to worry that someone may have copied your work, keep good notes and consider informing the course staff. 
A good way to
document your authorship is to submit preliminary 
work on gradescope as you develop your code.
See the 
college statement
 and the 
student code 
for other types of actions that would be considered academic integrity infractions.
The standard sanction for an academic integrity infraction is the larger of a 10% reduction in your course average or a non-droppable zero on the
assignments or quizzes involved. (This assumes a misdeed of some significance rather than a minor technical mistake or misunderstanding.) A
second infraction will typically cause you to fail the entire course.
Circumstances beyond your control
If you need disability accommodations, please send a copy of your DRES letter to the instructor. 
Usually it's fairly easy to work out something
appropriate. Similarly please tell the instructor if you need privacy protections 
beyond what we normally provide. 
(See 
here
 for the college's official
statements.)
We expect that you can arrange your work so that minor problems (e.g. a short virus, planned travel) do not stop you from meeting the deadlines.
In particular, you are expected to submit preliminary versions of MPs ahead of the deadline, so that last-minute problems will not have catastrophic
consequences.
We will make special arrangements for the usual range of official excuses (e.g. illness, religious holidays), serious extenuating circumstances,
university-sponsored travel (e.g. athletic, academic conferences), and situations that you could not reasonably have avoided by good preparation
(e.g. illness on the day of an exam/quiz). However, you must inform the instructor and respond to rescheduling emails in a timely manner. 
The
meaning of "timely" depends on the circumstances. 
For example, planned travel or religious holidays should be reported in advance. 
On the other
hand, there might be unavoidable delays informing us about a serious illness or injury.
For major and extended problems, we expect you to be in contact with the Dean of Students office. 
Or, for graduate students, your department's
advising office. 
These offices can help document the problem, help you stay in contact with instructors, and determine if you need significant
accommodations such as incompletes, late drops, light load..
Circumstances beyond anyone's control
Occasionally there are problems affecting a large number of people, e.g. network outages, 
snowstorms, TA strikes. 
In that case, we'll make
appropriate adjustments. 
Watch for announcements (e.g. piazza). Do not make unsafe choices, e.g. driving into campus when the roads are
dangerous.

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
