==================[Syllabus Start]==================
 
Home
Lectures
Material
CS446/ECE449: Machine Learning (Spring 2022)
Course Information
The goal of Machine Learning is to find structure in data. In this course we will cover three main areas, (1) discriminative models, (2) generative
models, and (3) reinforcement learning models. In particular we will cover the following: linear regression, logistic regression, support vector
machines, deep nets, structured methods, learning theory, kMeans, Gaussian mixtures, expectation maximization, VAEs, GANs, Markov decision
processes, Q-learning and Reinforce. 
Pre-requisites: 
Probability, linear algebra, and proficiency in Python. 
Recommended Text:
 (1) Machine Learning: A Probabilistic Perspective by Kevin Murphy, (2) Deep Learning by Ian Goodfellow and Yoshua
Bengio and Aaron Courville, (3) Pattern Recognition and Machine Learning by Christopher Bishop, (4) Graphical Models by Nir Friedman and
Daphne Koller, 
(5) Reinforcement Learning by Richard Sutton and Andrew Barto, (6) Understanding Machine Learning by Shai Shalev-Shwartz
and Shai Ben-David
Course Deliverables:
(1) Homework 
due at noon, see below for dates (no late submission accepted)
(2) Midterm
(3) Midterm 2
Grading:
 
3 credit: 60% homework (drop 1 homework), 20% midterm, 20% midterm 2
4 credit: 60% homework (drop 0 homework), 20% midterm, 20% midterm 2
Grading policy is subject to change.
TA/Office Hours:
Please see calendar on this 
[link]
 
Midterm 2:
 May 03 2022 during regular class time (attendance mandatory)
Instructor & TAs
Matus Telgarsky
Instructor
 
Email: mjt[at]illinois.edu
Website: 
[link]
 
Alexander Schwing
Instructor
 
Email: aschwing[at]illinois.edu
Website: 
[link]
 
Jing Liu
Senior Teaching Assistant
 
Email: jil292[at]illinois.edu
Website: 
[link]
 
Justin Li
Teaching Assistant
 
Email: jdli3[at]illinois.edu
Website: 
[link]
 
Jinglin Chen
Teaching Assistant
 
Email: jinglinc[at]illinois.edu
Website: 
[link]
 
Huichen Li
Teaching Assistant
 
Email: huichenli[at]gmail.com
Website: 
[link]
 
Yuan-Ting Hu
Teaching Assistant
 
Email: ythu2[at]illinois.edu
Website: 
[link]
 
Zhongzheng Ren
Teaching Assistant
 
Email: zr5[at]illinois.edu
Website: 
[link]
 
Xiaoming Zhao
Teaching Assistant
 
Email: xz23[at]illinois.edu
Website: 
[link]
 
Class Time & Location
Class Time: Tuesday, Thursday 12:30PM-1:45PM (hybrid/online; see campuswire for link) 
Discussion & Homework submission
Campuswire: 
[link]
 (code in class email) 
Gradescope: 
[link]
 (code: RWP5E2)
Material & Info
Material: 
[link]
 
Lectures
The syllabus is subject to change.
Event
Date
Description
Slides
Recording
Material
Format
Lecture 1
01/18/2022
Overview; start of linear regression
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 2
01/20/2022
Linear Regression
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 3
01/25/2022
Logistic Regression
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 4
01/27/2022
Linear prediction: features, overfitting, and losses
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 5
02/01/2022
Convex optimization
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 6
02/03/2022
Support Vector Machines 1
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 7
02/08/2022
Support Vector Machines 2
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
HW
02/08/2022
Homework 1 (due at noon)
 
 
[HW]
online
Lecture 8
02/10/2022
Deep Nets 1
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 9
02/15/2022
Pytorch Tutorial
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 10
02/17/2022
Deep Nets 2
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 11
02/22/2022
Nearest Neighbors and decision trees
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
HW
02/22/2022
Homework 2 (due at noon)
 
 
[HW]
online
Lecture 12
02/24/2022
Ensemble methods
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 13
03/01/2022
Learning theory
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
Lecture 14
03/03/2022
Review
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
hybrid
HW
03/03/2022
Homework 3 (due at noon)
 
 
[HW]
online
Midterm
03/08/2022
Midterm
 
 
 
online
Lecture 15
03/10/2022
PCA
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Break
03/15/2022
Break
 
 
 
online
Break
03/17/2022
Break
 
 
 
online
Lecture 16
03/22/2022
k-Means
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 17
03/24/2022
Gaussian Mixture Models
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 18
03/29/2022
Expectation Maximization
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 19
03/31/2022
Variational Auto-Encoders
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 20
04/05/2022
Generative Adversarial Nets
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
HW
04/05/2022
Homework 4 (due at noon)
 
 
[HW]
online
Lecture 21
04/07/2022
Autoregressive Methods
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 22
04/12/2022
Transformers
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
HW
04/14/2022
Homework 5 (due at noon)
 
 
[HW]
online
Lecture 23
04/14/2022
Graph Neural Nets
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 24
04/19/2022
MDP
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 25
04/21/2022
Q-Learning
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Lecture 26
04/26/2022
Actor-Critic & Policy Gradient
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
HW
04/26/2022
Homework 6 (due at noon)
 
 
[HW]
online
Lecture 27
04/28/2022
Review
[Slides]
 
[Slides Split]
 
[Slides Annot]
[Rec]
 
online
Midterm 2
05/03/2022
Midterm 2
 
 
 
online

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
