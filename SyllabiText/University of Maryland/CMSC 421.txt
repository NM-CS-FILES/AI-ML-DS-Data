==================[Syllabus Start]==================
Last update: January 28, 2010
CMSC 421, Artificial Intelligence
Syllabus
Syllabus 1
Basic Info
}Location & time: CSI 1122, Tuesday/Thursday 3:30am-4:45pm
}Instructor: Dana S. Nau
}Email: nau&cs.umd.edu (change & to @)
}Web page: http://www.cs.umd.edu/ ~nau
}Oce & phone: Room 3241 AVW, 301-405-2684
}Oce hours: after class till about 5:30pm; other times by appointment
}TA: Ke Zhai
}Email: zhaike&cs.umd.edu (change & to @)
}Oce hours: Tuesday 10:30am{12:00, and Friday 1:30{3:00pm
}Where: room 1112 AVW
Syllabus 2
Web pages
Home page for the course:
http://www.cs.umd.edu/ ~nau/cmsc421
That's where I'll post the lecture schedule, slides, etc.
Discussion forum
Web site:
https://forum.cs.umd.edu/forumdisplay.php?f=179
RSS feed:
https://forum.cs.umd.edu/external.php?type=rss2&forumids=179
Please post questions and comments there
Syllabus 3
Textbooks
Required:
Russell & Norvig, Articial Intelligence,
A Modern Approach (2nd edition)
Not the new 3rd edition. It was published
after the deadline for ordering textbooks.Recommended but
not required:
Paul Graham,
ANSI Common Lisp
Syllabus 4
Topics to be covered:
Topics to be covered (AMAI refers to the textbook):
}intelligent agents (AMAI chapter 2)
}search and game-playing (AMAI chapters 36)
}logical systems (AMAI chapters 79)
}planning systems (AMAI chapters 1112)
}reasoning about uncertainty (AMAI chapters 1314)
}learning (AMAI chapter 18 & 20)
}language (AMAI chapter 22)
}perception (AMAI chapter 24)
}Lisp: 2 or 3 programming projects
Syllabus 5
Workload
Homework assignments: about six, about 5 problems each
}You'll usually have one week to do them
}Submit them in class (not my oce, mail box, or email)
}For full credit, submit them on the due date
}For a 10% penalty, submit them at the next class meeting
}No credit after that
}Graded by the TA. Contact him if you want something regraded
Programming projects: probably three
}Language: Common Lisp
}Platform: Allegro Common Lisp on the OIT Unix cluster
Get a Glue account if you don't already have one:
http://www.oit.umd.edu/new
Syllabus 6
Exams
}Open book, open notes (and closed neighbor)
}The last class meeting before each exam will be a review
}Midterm: Thursday March 11 (our last class before spring break)
If that date is going to cause any problems, I need to know now
}Final exam: Wednesday, May 19, 10:30-12:30, as specied by the
university at http://www.testudo.umd.edu/soc/exam201001.html
}It will be cumulative
}If you miss an exam and you have both a valid reason (e.g., a medical
emergency) and convincing evidence, I'll give you credit for the
missed exam based on your performance on the other exam
}Exams will be graded by both the TA and me
Submit all regrade requests to me in writing
Syllabus 7
Grading
}Numeric score at end of semester:
exams + homeworks/5 + projects/2
}Total possible is approximately
100 + 140 + (6*50)/5 + (3*100)/2 = 450
}I'll assign letter grades on a curve, based on your total numeric score
To give you an idea how well you're doing, I can give you a tentative letter
grade after the midterm exam. But I won't use it in computing your nal
letter grade for the semester.
Academic integrity: I'll expect you to follow the student honor pledge:
http://www.studenthonorcouncil.umd.edu/code.html#honor_pledge
Syllabus 8
My teaching style
}Lecture slides; will work out details on the board
}To give you an idea of what's coming, I've already posted
some older versions of my slides.
}They're out-of-date, and I'll update them as I go along.
}I'll post the updated slides on the web after each class
}Please ask me questions during my lecture
}It give me a better idea of what things to explain
}Others will probably be glad you asked
Syllabus 9
My teaching style
}Lecture slides; will work out details on the board
}To give you an idea of what's coming, I've already posted
some older versions of my slides.
}They're out-of-date, and I'll update them as I go along.
}I'll post the updated slides on the web after each class
}Please ask me questions during my lecture
}It give me a better idea of what things to explain
}Others will probably be glad you asked
}Any questions?
Syllabus 10

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of ‚Äúcomputing system‚Äù requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
‚Äúcomputing system‚Äù requirements is a sub topic (2) 
‚Äúcomputing system‚Äù requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various ‚Äúcomputing system‚Äù factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
