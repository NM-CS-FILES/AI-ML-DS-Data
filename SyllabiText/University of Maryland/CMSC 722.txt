==================[Syllabus Start]==================
1 Nau –Lecture slides forAutomated Planning and ActingCMSC 722, AI PlanningSyllabusDana S. NauUniversity of MarylandTues/Thurs 2:00–3:15 PMIRB room 2207Last update: 1:29 PM, January 25, 2022
●Announcements:▸If you don’t have a U. of Maryland Turning Point account, get one now•You’ll need it for every class section▸All class sessions will be recorded, uploaded to Panopto
2 Nau –Lecture slides forAutomated Planning and ActingInstructor and TA●Instructor▸Dana S. Nau•http://www.cs.umd.edu/~nau•Office hours Tues/Thurs 3:30–4pm, other times by appointment●TA▸Jun Wang▸Office hours Tues 4–6pm, other times by appointment●For up-to-date info on office hours, check the Staff tab on the Piazza Resourcespage▸If you don’t know what Piazza is, see the next slide
3 Nau –Lecture slides forAutomated Planning and ActingPiazza●https://piazza.com/umd/spring2022/cmsc722/home•Class discussions•Resources page •This syllabus•Names and office hours•Nothing useful•Resources tabof the resources page (!)•Things you can download▸Don’t send questions by email, use Piazza instead•You’ll get answers more quickly•The answer might be useful to others•Others in the class be able to answer•You can post private questions to just the TA and me
Lecture Notes. . .Homework. . .Projects. . .Old Exams. . .Other. . .CMSC 474fall2021/cmsc474/resources        CMSC 474
4 Nau –Lecture slides forAutomated Planning and ActingMy Lectures●I’ll put copies of my lecture slides on Piazza▸Final version available after the lecture●Class sessions will be recorded,uploaded to Panopto●Please ask questions!▸They give me a better idea of what to explain▸Others may have the same question,they’ll be glad you asked●I’m hard of hearing▸If I ask you to repeat your question or use a microphone, please be patient●During lectures, I’ll do in-class polls▸You’ll need a U. of Maryland Turning Point account●Most polls:▸I’ll show you a multiple-choice question▸Discuss it with others at your table, then vote for the answer you think is correct●Vote at ttpoll.com or use the Turning Point app (IOS, Android)▸Session ID cmsc722▸Votes will be anonymous, won’t affect your grade
5 Nau –Lecture slides forAutomated Planning and ActingPrerequisites●Official prerequisite:▸CMSC 421 (Intro to AI) or equivalent, or permission of instructor●You don’t need to know most of the things in CMSC 421●Some things it would be helpful to know:▸heuristic search (but I’ll review it in class)▸propositional (Boolean) logic▸a little notation and terminology from first-order logic (e.g., predicates, instantiation)▸complexity theory (basic ideas)•O, Q, P, NP, NP-hardness, NP-completeness▸“mathematical maturity”•math notation, derivations, …
6 Nau –Lecture slides forAutomated Planning and ActingTextbooks●Primary:▸Ghallab, Nau, & Traverso. Automated Planning and Acting. Cambridge Univ. Press, 2016.•More info, including a downloadable copy of the manuscript●Supplemental:▸Haslum, Lipovetzky, Magazzini, & Muise. An Introduction to the Planning Domain Definition Language. Morgan Claypool, 2019.•PDF copy available freeif you download it on the campus network●Not required, but parts of them might be useful:▸Ghallab, Nau, & Traverso. Automated Planning: Theory and Practice. Morgan Kaufmann, 2004.▸Russell & Norvig. Artificial Intelligence: A Modern Approach.Pearson, 3rdedition (2009) or 4thedition (2021).
Automated Planning and ActingMalik Ghallab, Dana Nau  and Paolo Traverso
 
Series Editors: Ronald J. Brachman, Jacobs Technion-Cornell Institute at Cornell Tech Francesca Rossi, AI Ethics Global Leader, IBM Research AI Peter Stone, University of Texas at AustinAn Introduction to the Planning Domain De/f_inition LanguagePatrik Haslum, Australian National UniversityNir Lipovetzky, University of MelbourneDaniele Magazzeni, King’s College LondonChristian Muise, IBM ResearchPlanning is the branch of Arti/f_icial Intelligence (AI) that seeks to automate reasoning about plans, most importantly the reasoning that goes into formulating a plan to achieve a given goal in a given situation. AI planning is model-based: a planning system takes as input a description (or model) of the initial situation, the actions available to change it, and the goal condition to output a plan composed of those actions that will accomplish the goal when executed from the initial situation. /T_he Planning Domain De/f_inition Language (PDDL) is a formal knowledge representation language designed to express planning models. Developed by the planning research community as a means of facilitating systems comparison, it has become a de-facto standard input language of many planning systems, although it is not the only modelling language for planning. Several variants of PDDL have emerged that capture planning problems of diﬀerent natures and complexities, with a focus on deterministic problems. /T_he purpose of this book is two-fold. First, we present a uni/f_ied and current account of PDDL, covering the subsets of PDDL that express discrete, numeric, temporal, and hybrid planning. Second, we want to introduce readers to the art of modelling planning problems in this language, through educational examples that demonstrate how PDDL is used to model realistic planning problems. /T_he book is intended for advanced students and researchers in AI who want to dive into the mechanics of AI planning, as well as those who want to be able to use AI planning systems without an in-depth explanation of the algorithms and implementation techniques they use.
store.morganclaypool.comAbout SYNTHESISThis volume is a printed version of a work that appears in the Synthesis Digital Library of Engineering and Computer Science.  Synthesis books provide concise, original presentations of important research and development topics, published quickly, in digital and print formats.HASLUM • ET AL       AN INTRODUCTION TO THE PLANNING DOMAIN DEFINITION LANGUAGE          MORGAN & CLAYPOOLSeries ISSN: 1939-4608
Ronald J. Brachman, Francesca Rossi, and Peter Stone, Series Editors

7 Nau –Lecture slides forAutomated Planning and ActingHomework, Quizzes, Exams≈ 6 ungraded homework assignments▸Usuallyafew exercises from the book▸Please discuss them on Piazza ▸About a week after I assign them, we’ll discuss them in class≈ 6 brief in-class quizzes▸Usually a single problem to solve, on the same day that we discuss the homework▸Discuss the question in small groups•At most 5 per group•If the group all agrees on the same answer, it’s OK if the answers look alike▸Your worst quiz score will be dropped▸Just a small percentage of your grade●Midterm exam:▸Date TBD (probably Thurs March 17 or 31)●Final exam:▸Monday, May 16, 10:30am-12:30pm▸Specified by the university exam schedule●Both exams will be in this room●To help you prepare▸In-class review▸Online copies of old exams•with and without answers
8 Nau –Lecture slides forAutomated Planning and ActingProgramming Projects●One or two projects●≈ 2–4 weeks to do each project▸Submit before midnight on the due date▸10% penalty: submit up to 2 days late▸No credit after that●OK to discuss ideas and general approach with other students▸But not pseudocode or actual code▸The code you submit must be your own●Submit projects on Gradescope▸Entry codeYVW3ZE●The TA will grade the projects▸For regrades, contact him on Piazza●Projects will donepartly in Python, partly in PDDL●PDDL is in the supplementary textbook, I’ll teach the parts that you’ll need●I’d rather not teach Python▸It’s easy to learn, almost like reading pseudocode▸If necessary, I can quickly review the basics●Poll: how much Python do you know? A.NoneB.A littleC.Enough for ordinary programmingD.A lotE.A lot, and I know what import antigravity doesF.I probably know more about it than you do
9 Nau –Lecture slides forAutomated Planning and ActingGrading●Proportion of grade will probably be one of the following:If we have two projectsIf we have one projectMidterm 15%Midterm: 22%Final 25%Final: 33%Projects: 25% eachProject: 35%Quizzes: 10% totalQuizzes: 10% total●We’ll assign letter grades based on the ranges shown in the table▸Depending on the grade distribution, I may lower the cutoffsLetter gradePercentageA+97–100A93–96A−90–92B+87–89B83–86B−80–82C+77–79C73–76C–70–72D+67–69D63–66D–60–62F0–59
10 Nau –Lecture slides forAutomated Planning and ActingOther Things●University course-related policies for graduateand undergraduatestudents▸Academic integrity, accessibility, absences, missed assignments, rights, responsibilities, university resources, etc. ●On exams and programming projects, you’ll need to sign the student honor pledge●A studyin 2018:▸When students were allowed to use electronic devices, they did about 5 points worse on exams▸Even if they didn’t use the devices themselves●You may use electronic devices, but only for things related to this class●UMD information on preventing COVID-19●Poll: have you been vaccinated and boosted?A. yesC. vaccinated, not boostedB. noD. huh?●At most 5 people per table●Wear a mask and make sure it fits properly▸KN95, KF94, or N95 (no exhaust valve)●Poll: are you wearing one of the above?A. yesB. no (but I’ll do so next time)●Free test kits: ▸student union and covidtests.gov●If you get COVID-19

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
