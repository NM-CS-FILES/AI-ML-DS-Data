==================[Syllabus Start]==================
CSci 5521 sec 001 -- Fall 2020 -- Course Syllabus (tentative)
Class Hours
 
Lecture: TTh 1-2:15pm - electronic only via Zoom/Canvas. 
Some activities will be semi-synchronous. 
Seating is limited by available staff support, which has yet to be determined.
Textbook
 
Introduction to Machine Learning; by Ethem Alpaydin (3rd ed) 2014. 
"https://na01.alma.exlibrisgroup.com/view/action/uresolver.do?
operation=resolveService&package_service_id=2261997953790001701&institutionId=1701&customerId=1700"
 
(above link requires UofM login. 
Fourth edition also exists, but access available by purchase only)
Instructor: 
Prof. Daniel Boley, 
Office: ZOOM: 
TBA 
Phone: 612-625-3887 (lv message) 
Office Hours: 
M 10-11 Th 2-3 (after class) 
office hours are tentative during the first two weeks
 
 
To avoid my e-mail spam filter, please include 
the string "5521" in the subject line.
TA: Shi Chen
 
Email: chen4595@umn.edu 
Office: ZOOM: 
TBA. see 
ClassInfo
 when available. 
Office Hours: W 4-5pm, F 5-6pm 
TA: Somya Sharma
 
Email: sharm636@umn.edu 
Office: ZOOM: 
TBA. see 
ClassInfo
 when available. 
Office Hours: M 4-5pm, T 4-5pm 
Assignment Plan (not in order)
 
If the number of exams and/or assignments changes, the relative weights will be adjusted.
Several "classroom" exercises and/or pop quizzes (up to once a week): up to 10% of final grade
3-4 assignments with short turn-around time (max 24 hours): 40% of final grade
4-6 longer assignments : 50% of final grade
Final grade will be based on a weighted average of your scores, assuming you have reached a minimum threshold in each category.
General Information
 
Neural networks, non-parametric windowing, and Bayes statistical theory are three popular methods for recognizing and classifying patterns - the process of
Pattern Recognition. These are the basic machine learning algorithms applicable to 
high-dimensional numerical data. We introduce the fundamental concepts
of these various approaches, including the classification phase and the learning phase. 
Part of the class will be devoted to methods for unsupervised learning
and classification. 
We assume just some knowledge of elementary statistics, calculus, and elementary linear algebra at the upper division undergraduate level.
A combination of written assignments and programming projects will be used to illustrate the concepts. 
Most if not all programming will be done in Matlab
and/or python. 
For those familiar with one but not the other, side-by-side comparisons will be provided. material showing how to for those unfamiliar with it.
TOPICS by week
1
. 
Intro: What is Machine Learning (Chap 1) 
HW0 due Friday Sept 11
 ##
2
. 
Supervised Learning: Some basic concepts (Chap 2)
3
. 
Bayes Decision Theory: Conditional Probability (Chap 3) 
. . .  Discriminant Functions, Normal Dist. (Chap 3) 
HW1 due Friday September 25
 ##
4
. 
Estimating Unknown Probability Densities, 
(Chap 4) 
. . .  
Parametric Classification (Chap 4)
5
. 
Multivariate Methods: estimation and classification (Chap 5) 
Take Home Exam 1, due Friday October 16.
 ##
CSci 5521 Sec 001 - Intro to Machine Learning
|
6
. 
. . .  
continued
7
. 
Dimensionality Reduction: feature selection PCA (Chap 6)
8
. 
Unsupervised Clustering: K-means EM (Chap 7) 
HW2, now due Friday October 30
 ##
9
. 
Support Vector Machines, (Linear and Kernel) (chap 13)
10
. 
. . .  
continued
 
HW3 due Friday November 13
 ##
11
. 
Linear Discriminant - the Perceptron (Chap 10) 
Take Home Exam 2, due November 17
 ##
12
. 
Multilayer Perceptrons (Chap 11) 
. . .  
continued
13
. 
Decision trees; (Chap 9) random forests (bagging) 
HW4, due Wednesday December 2
 ##
14
. 
Review 
HW5 due Thursday December 10
 ## 
15
. 
Take Home Exam 3, due Tuesday December 15
Students will be expected to implement several of the algorithms on a digital computer, some in MATLAB and some in python. Exact details will be
forthcoming before the semester starts. Students should be familiar with basic programming techniques, as well as being able use the help system in
MATLAB or python. 
Students should also be acquainted with the basic concepts in linear algebra and probability, 
though some of this will be
reviewed during the course.
All items handed in to be graded must represent the individual effort of whoever's name(s) appears on the item. 
At a minimum, violators of this policy
will fail the course and/or will have their names recorded at the appropriate University or Department office. 
Mutual discussion of each individual's
results in the homeworks is encouraged, as long as the results themselves represent individual efforts. 
Some assignments will be done by pairs of
students; such items should be handed in as a single item listing the names of all participants. 
To pass the course, you will have to achieve a passing
grade on the exams alone, and do satisfactorily on the homeworks. After any graded item is first handed back, you have at most one week to ask
about the way it was graded.
You should also be aware of the following University-wide policies:
Student Conduct Code
Makeup Work for Legitimate Absences
Appropriate Student Use of Class Notes and Course Materials
Sexual Harassment
Equity, Diversity, Equal Opportunity, and Affirmative Action
Disability Accommodations
 If you require special accomodation for examinations, you should notify the instructor in the first two weeks of the
semester. 
Any special arrangements to take exams outside of class are to be arranged with the Disability Office.
Mental Health and Stress Management
Late submissions: 
Homeworks will be accepted up to two working days after the due date with a deduction of 5% of the total grade per day, but
before the answers have been posted, which ever occurs first. Classroom exercises will be handed out during the posted class time on an irregular
basis 
and should be submitted electronically through canvas within 24 hours. Students signing up for the class during the first two weeks of the
semester must hand in missed classroom exercises during the day of their first attendance. These deadlines may be extended for excused absences on
a case-by-case basis, but only for a limited number of occurences.
Back to class home page
.
Â© 2024 Regents of the University of Minnesota. All rights reserved.
The University of Minnesota is an equal opportunity educator and employer
Last modified on December 8, 2020

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of âcomputing systemâ requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
âcomputing systemâ requirements is a sub topic (2) 
âcomputing systemâ requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various âcomputing systemâ factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
