==================[Syllabus Start]==================
CSCI 5525 Machine Learning: Analysis and Methods
Spring 2021
General Information
What are state-of-the-art machine learning methods, and why they work? This graduate-level
introductorycourse tomachine learningfocuses onthefoundations ofmodern machinelearning.
We will cover selected topics from supervised learning, unsupervised learning, and interactive
learning. For each topic, key algorithmic ideas/intuitions and basic theoretical insights will be
highlighted. Theendgoalisthatthestudentswillbeabletodevelopanddeploynovellearning
methods for their applications, and potentially derive basic theoretical understanding.
•Prerequisite: Introduction to machine learning or equivalent (CSCI5521 or 5523) are highly
recommended . Maturity in linear algebra, multivariate calculus, and basic probability is
assumed. FamiliaritywithPython(esp. Numpy,Scipy)isnecessarytocompletethehomework
assignments and ﬁnal projects.
•When & Where: Mon/Wed 1:00–2:15pm, Keller 3-210
•Who: Professor Ju Sun (Instructor) Email: jusun@umn.edu
Le Peng (TA) Email: peng0347@umn.edu
Tiancong Chen (TA) Email: chen6271@umn.edu
•OﬃceHours: Tue/Thur5–6pm(Instructor) Mon/Wed3–4pm(Le) Fri3–4pm(Tiancong)
•CourseWebsite: https://sunju.org/teach/ML-Spring-2021/ Allcoursematerials,includ-
ing course schedule, lecture slides and notes, homework assignments, project description,
will be posted on the course website. Enrolled students are encouraged to check the website
on a regular basis.
•Communication—minimizing emails: Canvas is the preferred and most eﬃcient way of
communication. Please post all questions and discussions related to the course in Canvas
instead of sending emails. If you have to use emails, please begin the subject line with “CSCI
5525", and expect delay in response.
Tentative Topics
The list of topics is subject to change.
•Overview
•Linear prediction
•Supervised learning and generalization
•Support vector machines and kernel methods
•Boosting
•Decision trees
1
•Neural networks
•Dimension reduction: PCA and kernel PCA
•Unlock relations: ICA and CCA
•Clustering (spectral, hierarchical)
•Generative models (GMM, GAN, variational autoencoder)
•Online/Reinforcement learning
Teaching Format
FortheSpringsemester, allenrolledstudentswillbeabletoviewlive-streaminganddownloadable
videoarchivesofclassmeetingswithnodelayforthelengthofthesemesterthroughtheUNITE
Media Portal. The video archives will also be available from within Canvas under “Media Gallery".
Access the media for your classthroughthe“LOG INto UNITEMedia Portal” linkin the upper
right of the UNITE website ( www.unite.umn.edu ).
YourUniversityInternetID(a.k.a. “x.500")andpasswordarerequired(thisiswhatyouuse
toaccessCanvas,yourUniversityofMinnesotaemailaccount,etc.). -loginandclickonthelink
for your course. Access these videos through the UNITE Media Portal with your University of
Minnesota Internet I.D. and password.
DO NOT ask the instructor or teaching assistants for technical or troubleshooting assistance
with these streaming video archives – use the UNITE Troubleshooting FAQ ( https://cse.umn.
edu/unite/troubleshoot-unite-media )or“SubmitaTroubleReporttoUNITE”throughthelink
found on all pages within the UNITE Media Portal.
Live streaming video has latency based on UNITE compression and your individual stable
internet connection speed,typically ranging from 30to 60 seconds. The archived UNITEmedia is
typically available within an hour after the end of class meetings.
Recommended References
Thereisnorequiredtextbook. Lecturenotesandadditionalnoteswillbetheprimaryresources.
Recommended reference books are the following, all of which are freely available either online or
through library e-access.
•Advanced machine learning textbooks
– Foundations ofMachine Learning (2e) by Mehryar Mohri, Afshin Rostamizadeh, and
Ameet Talwalkar. https://cs.nyu.edu/~mohri/mlbook/
– UnderstandingMachineLearning: FromTheorytoAlgorithms byShaiShalev-Shwartz
andShaiBen-David. https://www.cs.huji.ac.il/~shais/UnderstandingMachineLearning/
– TheElementsofStatisticalLearning: DataMining,Inference,andPrediction byTrevor
Hastie,RobertTibshirani,andJeromeFriedman. https://web.stanford.edu/~hastie/
ElemStatLearn/
– MachineLearning: AProbabilisticPerspective by Kevin P. Murphy. click here (UMN
library access; login required)
2
•Mathematics foundations
– Mathematics for Machine Learning by Marc Peter Deisenroth, A. Aldo Faisal, and
Cheng Soon Ong. https://mml-book.github.io/
– LinearAlgebraandOptimizationforMachineLearning byCharuC.Aggarwal. https:
//rd.springer.com/book/10.1007/978-3-030-40344-7 (UMN library access; login
required)
•Hand-on in Python
– Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow: Concepts,
Tools,andTechniquestoBuildIntelligentSystems by Aurélien Géron (2ed). O’Reilly
Media, 2019. click here (UMN library access; login required)
Assessment
•Homework 60%: 6Homeworks( 12%each), thetop5scoreswillcounttowardtheﬁnalgrade
•Takehome mid-term 15%
•Courseproject 25%: proposal( 5%)+ﬁnalreport( 20%). Theprojectcanbesurveyofachosen
topicnot coveredin detailintheclass, implementationand comparisonofexisting methods,
or novel foundational or applied research
Homework
You have approximately 10 days time to complete each homework (exact due date will be speciﬁed
in each assignment). No late submissions will be accepted. All submissions mustbe electronic
anduploadedviatheCanvassystem. Writtenpartshouldbeneatlywrittenortypesetand must
be submitted as PDF ﬁles. For students pursuing research in relevant areas, you are strongly
encouraged to typeset your solution using L ATEX. Computer programs mustbe submitted in the
Python notebook format. Only Python 3 will be used and accepted in this course.
Collaborationonhomeworkproblemsisstronglyencouraged,buteachstudentmustensure
thattheﬁnalsubmissionispreparedindividually. Collaboratorsshouldbeproperlyacknowledgedin
the ﬁnal submission, at the problem level. The same applies to computer programs. Plagiarism and
cheating will not be tolerated and are subject to disciplinary action. Please consult the student code
of conduct for more information: https://regents.umn.edu/sites/regents.umn.edu/files/
2019-09/policy_student_conduct_code.pdf
Course Project
The course project is to be performed by teams of 2 students. All students from the same team will
get the same score for their course project.
3
Programming and Computing
OurprogrammingenvironmentwillbePython3. Fordeeplearningframeworks,PyTorch( ≥1.0)is
preferred,butTensorﬂow( ≥2.0)isalsoacceptedandsupported. Forsmall-scaleexperiments,which
will be the case for homework assignments, Google Colab ( https://colab.research.google.
com/) and UMN MSI notebook service will suﬃce. Local installation of the relevant software
packagesmaybeareasonablealternative. Forlarge-scalecourseprojects,wecanusetheMinnesota
Supercomputing Institute (MSI) GPU computing queues based on our class account.
Other Policies
Pleaseconsultthispolicylink https://policy.umn.edu/education/syllabusrequirements-appa
4

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
