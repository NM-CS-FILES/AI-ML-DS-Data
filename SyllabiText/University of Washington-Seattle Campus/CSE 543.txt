==================[Syllabus Start]==================
General information
General information
Course Logistics
Course Logistics
Instructor:
Instructor:
 
Simon S. Du 
(https://simonshaoleidu.com/)
Teaching Assistant: 
Teaching Assistant: 
Prashant Rangarajan
 
(mailto:prashr@cs.washington.edu)
, 
Yuhao Wan
 
(mailto:yuhaowan@cs.washington.edu)
Lecture time and place:
Lecture time and place:
 
Tuesday, Thursday 
9:00 -- 10:20AM, CSE2 G10
Oice Hours:
Oice Hours:
Simon S. Du: Tuesday 10:30 -- 11:30 AM in person (Gates 312) and Zoom
Prashant Rangarajan: Wednesday 11:00 - 12:00 AM on Zoom
Yuhao Wan: Monday 10:00 - 11:00 AM on Zoom 
Zoom links are on Canvas
Piazza (
Piazza (
link
link
 
 
(https://piazza.com/washington/spring2022/cse543/home)
(https://piazza.com/washington/spring2022/cse543/home)
)
)
About the Course, Prerequisites and Grading
About the Course, Prerequisites and Grading
Deep learning is a broad class of machine learning methods based on neural networks, has become the central paradigm of
machine learning. This course aims to introduce recent and exciting developments in deep learning. The focus is on the
algorithmic and theoretical aspects of deep learning.
Prerequisites:
Prerequisites:
 
This is an advanced graduate course, designed for Ph.D. level students, and will assume a substantial degree of
mathematical maturity. Students entering the class should be comfortable with programming and should have a working
knowledge of linear algebra (MATH 308), vector calculus (MATH 126), probability and statistics (CSE 312/STAT390), algorithms,
and machine learning (CSE 446/546).
Grading:
Grading:
 
Your grade will be based on 2 homework assignments: HW1 (20%), HW2 (20%), a project proposal (5%), a project
presentation (20%), and a final project report (35%)
Homework
Homework
There are two homework, which will be released on Canvas.
You have 
two late days.
two late days.
Homework must be typed. You can use any typesetting so:ware you wish (latex, markdown, ms word, etc).
You may discuss assignments with others, but you must write down the solutions by yourself.
We follow the standard 
UW CSE policy 
(https://www.cs.washington.edu/academics/misconduct)
 
for academic integrity.
Tentative timeline:
Tentative timeline:
First homework release: April 8th. First homework due: April 22nd.
Second homework release: April 22nd. Second homework due: May 6th.
Course project
Course project
Projects should be done in groups of 1-2, with the intention of exploring one direction in greater detail. If you cannot find
team members for a group, send an email to the instructor. The projects can be either a literature review or original research.
For literature review, you do not need to reimplement algorithms. We list ideas for a few project topics on Canvas. It is okay to
do projects on topic not listed.
Timeline:
Timeline:
Proposal (due date: April 8th): submit a short report (1 - 1.5 pages) stating the papers you plan to survey or the research
problems that you plan to work on. Describe why they are interesting and provide a list of appropriate references. You are
encouraged to connect this project with your current research.
Presentation (May 31st and June 2nd): details on Canvas.
Final report (due date: June 10th): You are expected to submit a written project report (~8pages) describing your
findings.
Format:
Format:
 
You must use the 
NeurIPS Latex format. 
(https://neurips.cc/Conferences/2020/PaperInformation/StyleFiles)

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of ‚Äúcomputing system‚Äù requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
‚Äúcomputing system‚Äù requirements is a sub topic (2) 
‚Äúcomputing system‚Äù requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various ‚Äúcomputing system‚Äù factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
