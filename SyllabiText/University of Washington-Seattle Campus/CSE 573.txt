==================[Syllabus Start]==================
CSE 573 - Artificial Intelligence I - Winter 2023
Tuesday/Thursday, 10:00-11:20 AM in 
CSE2 G04
 
GUG 218
 
Lecture zoom link: 
https://washington.zoom.us/j/93511863677
Staff email : 
cse573-wi23-staff@cs.washington.edu
 
Instructor:
 
Hanna Hajishirzi
Office hours:
 Monday, 10:00-10:45 AM (zoom) 
Zoom link: 
https://washington.zoom.us/j/92210602318
TA:
 Skyler Hallinan 
Office hours:
 Wed 4:15-5:00 PM, Fri
12:15-1:00PM
Zoom link:
https://washington.zoom.us/j/2356030978
TA:
 Diya Joy 
Office hours:
 Tue/Thu, 2:30-
3:15 PM 
Location:
 CSE2 (Gates) 323
Schedule [subject to change!]
Week
Dates
Topics & Lecture Notes
Readings
Programming
Assignments
Written Assignments
1
Jan 3, 5
Introduction
;
R&N 1-2; 3.1-3.4
Search Visualization
Tool
PS0 No Due Date
2
Jan 10, 12
Search
; 
Informed Search
;
R&N 3.5-3.7, 4; 5.1-
5.4
3
Jan 17, 19
Informed Search
; 
Adversarial Search
;
R&N 5.5
4
Jan 24, 26
Adversarial Search
; 
Expectimax
;
R&N 17
PS1 Due: Jan 24
5
Jan 31, Feb
2
Markov Decision Processes (MDPs)
R&N 22.1-22.5
HW1 Due: Feb 2
6
Feb 7, 9
Reinforcement Learning
R&N 22; 12, 13.1-
13.4
PS2 Due: Feb 7
7
Feb 14, 16
Reinforcement Learning II; 
Machine
Learning 1
R&N 19, 19.6-19.9
Project Proposal Due: Feb 14
8
Feb 21, 23
Machine Learning 2
; 
Neural Networks
R&N 21
Paper Report Due: Feb 21
9
Feb 28, Mar
2
Bayes Nets
;
R&N 14.1-14.3
PS3 Due: Feb 28
10
Mar 7, 9
Hidden Markov Models (HMMs)
;
Conclusion
R&N 14.2
HW2 Due: Mar 7
11
Mar 14
Finals
PS4 Due: Mar 14
Project Presentation Due: Mar
15 
Project Report Due: Mar 17
Textbooks
Optional: Stuart Russell & Peter Norvig, 
Artificial Intelligence: A Modern Approach
, Prentice-Hall, 
Third Edition (2009) [R&N].
Useful: 
Mausam, Andrey Kolobov. 
Planning with Markov Decision Processes: An AI Perspective
 Synthesis Lectures on Artificial
Intelligence and Machine Learning. Morgan and Claypool Publishers. June 2012. 
(free online version if accessed from UW)
 [M&K]
Useful: Richard Sutton & Andrew Barto, 
Reinforcement Learning: An Introduction
, MIT Press. (limited chapters; freely available online)
[S&B]
Programming Assignments
This quarter, we will do 
The Pac-Man Projects
. Please complete the versions listed below, as they differ in places from the originals. 
Project 0: Python Tutorial
 (Not Graded)
Project 1: Search in Pacman
 (Due: 
Tuesday, 1/24
 at 11:59 PM)
Project 2: MultiAgent Pacman
 (Due: 
Tuesday, 2/7
 at 11:59 PM)
Project 3: MDPs & RL
 (Due: 
Tuesday, 2/28
 at 11:59 PM)
Project 4: Machine Learning
 (Due: 
Tuesday, 3/14 
at 11:59 PM)
Writing Assignments and Paper Report
Writing Assignment 1 (HW1) 
[PDF]
 
[Google Doc link]
 (Due: Thursday, Feb. 2 by 11:59pm)
Paper Report 
[PDF]
 
[Google Doc link]
 (Due: Tuesday, Feb. 21 by 11:59pm)
Writing Assignment 2 (HW2) 
[PDF]
 
[Google Doc link]
 (Due: Tuesday, Mar. 7 at 11:59pm)
Assignments, Discussion Board
Please use 
Ed
 for course related questions.
Final Project
Please follow these instructions regarding your final project:
Projects can be done in a group of one to two students.
We encourage you to work on research projects that are close to your interests. As a reference, we also provide a 
list of potential projects
.
Your final project can also be a re-implementation of one of the recent papers from AI/ML/NLP/Computer vision conferences.
Project Proposal
 (20 points, Due: Feb 14th) The project proposal is a 1-page summary of the project topic, motivation, definition, dataset,
and resources. It should also include the milestones, detailed experiment plan, and the timeline to complete each milestone.
Project Presentation
 (40 points, Due: Mar 16th): 
We will have the poster presentation remotely. Each team should make a presentation in
form of poster or slides, record a presentation over it and upload it for grading. More instructions can be found 
here
.
Project Report
 (40 points, Due: Mar 17th): Your write up should be about 4 pages maximum (not including references) in 
Camera-ready
NeurIPS format
. You may have unlimited appendices for clarifications, however, your main content should appear in the 4-page limit.
Course Administration and Policies
Your 
grade
 will be 5% paper reports, 40% programming assignments, 25% homeworks, and 30% project.
Assignments should be done individually unless otherwise specified. 
You may discuss the subject matter with other students in the class, but
all final answers must be your own work. You are expected to maintain the utmost level of academic integrity in the course.
Late Policy (***EXCEPT FINAL PROJECT***)
: Each student has 
Six
 penalty-free late day for the whole quarter, other than 
that any
late submission will be penalized at a penalty of 20% of the maximum grade per day.
Penalty-free late days are not applicable to Final Project. The maximum late days that can be used per assignment is four.

===================[Syllabus End]===================
Please examine the attached course syllabus carefully and provide detailed answers to the research questions (RQ) listed below. Each question focuses on specific aspects of "computing systems" tailored for AI/ML scalability. We are looking for specific issues and topics related to compilers, runtime systems, hardware acceleration, code optimization, programming model for AI/ML covered in the syllabus. Programming with Python or jupyter does not count as computing system topics.

RQ 1. Course Content and Frequency:
1.1 How frequently are topics explicitly related to "computing system" specialized for ML/AI discussed in the course? 
The topics are 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in likert scale: 
Frequent (4): At least one dedicated lecture discussed the topics.
Intermittent (3): The topics are discussed occasionally. 
Infrequent (2): The topics are rarely mentioned.
Never mentioned (1): The topics are never mentioned.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 2. Definition and Understanding:
2.1 How are the impacts of "computing systems" on AI/ML explicitly defined and explained in undergraduate curricula? 
The definition and explanation should include concepts of 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Adequate (3): Provide detailed definition and explanation.
Inadequate (2): Many of the topics missed significant discussion in lectures or in assignments.
Undefined (1): The topics are mostly undefined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
2.2 Do courses provide a comprehensive and explicit definition of impacts of "computing systems" on AI/ML?
The definition and explanation should include concepts such as 1) scalable (parallel and distributed) model training, inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer by providing the list of above topics (1 to 9) discussed in the course. Make it short and direct. Limit in 100 words. Do not include topics unrelated to "computing systems" like general ML/AI algorithms.

RQ 3. Requirement Specification:
3.1 How are computational performance and capability requirements for hardware and software systems running scalable AI/ML, explicitly specified and discussed in undergraduate courses?
Topics include 1) Computational Power (CPU, GPU, TPU, Edge AI chips), Memory and Storage, Network for scalable (parallel and distributed) model training, inference; 2) Distributed Computing Frameworks such as TensorFlow's Distributed Strategy, PyTorch's Distributed Data Parallel (DDP), and Horovod 3)  Optimization Techniques such as Efficient Algorithm, Quantization, Prunning 4) Programming Models and Abstractions such as High-Level Libraries (Tensorflow, PyTorch, Keras)
Answer in Likert scale: 
Quantitatively (3): The lectures or assignments provide numerical values for computational performance and capability requirements such as latency, throughput, resource utilization etc.
Qualitatively (2): The lectures used descriptive terms.
No guidelines (1): The Lecture provide no guidelines.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
3.2 How did the discussion of “computing system” requirements rank against the discussion of general AI/ML topics?
Answer in Likert scale: 
Equally discussed with other AI/ML topics (3)
“computing system” requirements is a sub topic (2) 
“computing system” requirements were never discussed (1) 
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 4. Influence and Importance:
4.1 How is the importance of various “computing system” factors of designing and maintaining scalable AI/ML emphasized in the course?
The factors are 1) scalable (parallel and distributed) model training and inference; 2) testing, debugging, and monitoring of ML applications; 3) ML programming models and abstractions; 4) programming languages for machine learning; 5) ML compilers and runtimes; 6) specialized hardware for machine learning; 7) hardware-efficient ML methods; 8) machine learning benchmarks, and tooling.
Answer in Likert scale: 
Holistic (2): The course took into account of many of the above factors.
System (1): The course viewed the factors as low level system issue, relegating responsibility to correct choice of hardware, programming model and AI/ML framework.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.

RQ 5. Case Studies and Real-World Applications:
5.1 Are real-world case studies involving hardware and software systems for AI/ML, with a focus on scalable model training, inference, and serving explicitly included in the curriculum?
Answer in Likert scale: 
Major (2): Computational performance and capability of the underlying system was the major concerns of the case studies.
Minor (1): Computational performance and capability of the underlying system was not a major concern of the case studies.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 6. Awareness and Integration of AI-Specific Engineering Practices:
6.1 Do the courses discuss contributions and best practices from AI/ML system engineering communities, specifically in areas such as compilers, runtime systems, hardware acceleration, and code optimization?
Answer in Likert scale: 
Adequate (3): The courses thoroughly cover contributions from AI/ML system engineering communities and best practices in detail by depicting from state of art.
Inadequate (2): The courses mention the topic but do not cover it in sufficient depth or detail.
Undefined (1): The coverage of this topic in the courses is unclear or not well-defined.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
RQ 7. Projects and Practical Implementation:
7.1 To what extent do the assignments in the course provide hands-on experience with designing, building, and maintaining both scalable hardware and software systems for AI/ML, specifically focusing on compiler optimization, optimizing runtime systems, hardware acceleration, or code optimization for AI/ML?
Answer in Likert scale: 
Adequate (3): The assignments thoroughly cover these areas and provide extensive hands-on experience.
Inadequate (2): The assignments cover these areas minimally and do not provide sufficient hands-on experience.
None (1): The assignments do not cover these areas or provide relevant hands-on experience.
Could not be evaluated (0): Insufficient information or exposure to the assignments on the syllabus to provide an evaluation.
Provide the score based on overall discussion of the above topics. Do not rate each topic individually. No explanation needed.
